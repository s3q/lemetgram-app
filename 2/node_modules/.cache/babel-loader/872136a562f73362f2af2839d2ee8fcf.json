{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\s3q\\\\Documents\\\\GitHub\\\\medical-encyclopedia\\\\medical-encyclopedia-app\\\\src\\\\components\\\\Post.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState, useContext } from 'react'; // import {addLike} from \"../functions/Post\"\n\nimport axios from \"axios\";\nimport { format } from \"timeago.js\";\nimport Api from \"../functions/Api\";\nimport { Link, Redirect } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { updateLoginApiContext } from \"../ApiContext\";\nimport { v4 as uuidv4 } from 'uuid';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\nimport MeetingRoomRoundedIcon from '@material-ui/icons/MeetingRoomRounded';\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';\nimport { CircularProgress, LinearProgress } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post(props) {\n  _s();\n\n  // props : postId, posts\n  const context = useContext(AuthContext);\n  const [user, setUser] = useState({});\n  const [post, setPost] = useState({});\n  const [likeCount, setLikeCount] = useState(0);\n  const [isLike, setIsLike] = useState(false);\n  const [modalId, setModalId] = useState(`A${uuidv4()}`);\n  const [isFetching, setIsFetching] = useState(false);\n  useEffect(() => {\n    updateLoginApiContext(context.dispatch);\n  }, [isLike]);\n\n  const fetchPost = async () => {\n    setIsFetching(true);\n    await Api.fetchPost(props.postId).then(res => {\n      setPost(res.data);\n    });\n  };\n\n  const fetchUser = async () => {\n    await Api.fetchUser(post.userId).then(res => {\n      setUser(res.data);\n    });\n  };\n\n  useEffect(() => {\n    if (post._id) {\n      setIsFetching(false);\n      setLikeCount(post === null || post === void 0 ? void 0 : post.likes.length);\n      setIsLike(post === null || post === void 0 ? void 0 : post.likes.includes(context.user._id));\n      fetchUser();\n    }\n  }, [post]);\n  useEffect(() => {\n    setIsFetching(false);\n    fetchPost();\n  }, [props.postId]);\n\n  const likePost = async () => {\n    console.log(context.user._id);\n    const res = await Api.likePost(post._id, context.user._id);\n    return res.status;\n  };\n\n  const handlerLike = async () => {\n    const resStatus = await likePost();\n\n    if (resStatus == 200) {\n      if (isLike) {\n        post.likes = post.likes.filter(e => {\n          return e != context.user._id;\n        });\n      } else {\n        post.likes.push(context.user._id);\n      }\n\n      setLikeCount(post === null || post === void 0 ? void 0 : post.likes.length);\n      setIsLike(!isLike); // await updateLoginApiContext(context.dispatch)\n    }\n  };\n\n  function handleLikeStatusDev() {\n    if (isLike == true || isLike == \"true\") {\n      return /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(FavoriteBorderIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  const handelDeletePost = async () => {\n    if (post._id) {\n      let posts = props.state.posts;\n      posts = posts.filter(p => p._id != post._id);\n      props.state.setPosts(posts);\n      await Api.deletePost(post._id, context.user._id).then(res => {\n        console.log(res.data);\n\n        if (res == 200) {\n          setPost({});\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: `/profile/${context.user.username}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 28\n          }, this);\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-5 custom-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/profile/${user.username}`,\n            className: \"btn btn-sm btn-light d-flex align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `profileImg ${user.profileImg ? `loadImg` : `isLoading`}`,\n              style: {\n                backgroundImage: !user.profileImg ? `` : `url(${user.profileImg})`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"username\",\n              children: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          id: `B${uuidv4()}`,\n          className: \"btn btn-sm btn-light ms-auto rounded-pill\",\n          \"data-bs-toggle\": \"modal\",\n          \"data-bs-target\": `#${modalId}`,\n          children: /*#__PURE__*/_jsxDEV(MoreHorizIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundImage: !post.img ? `` : `url(${post.img})`\n        },\n        sizes: \"614px\",\n        className: `card-img-bottom feedImg ${post.img ? `loadImg` : `isLoading`}`,\n        children: isFetching ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: post.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-muted\",\n            children: format(post.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm btn-danger text-dark\",\n          onClick: () => handlerLike(),\n          children: [handleLikeStatusDev(), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge bg-light text-dark ms-1\",\n            children: isFetching ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 10\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 87\n            }, this) : likeCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade\",\n      id: modalId,\n      tabIndex: \"-1\",\n      \"aria-labelledby\": `B${uuidv4()}`,\n      \"aria-hidden\": \"true\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog  modal-dialog-centered\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content custom-modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              id: \"exampleModalLabel\",\n              children: [user.username, \" - post\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close\",\n              \"data-bs-dismiss\": \"modal\",\n              \"aria-label\": \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: post.userId == context.user._id ? /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"btn-group-vertical w-100\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-light\",\n                onClick: handelDeletePost,\n                \"data-bs-dismiss\": \"modal\",\n                \"aria-label\": \"Close\",\n                children: \" delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-light\",\n                onClick: () => {\n                  let postLink = `${window.location.host}/preview/post/${post._id}`;\n                  navigator.clipboard.writeText(postLink);\n                },\n                children: \" getLink\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 37\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n} // export default className Post extends Component {\n//     // props : post , userId\n//     constructor(props) {\n//         super(props)\n//     }\n//     state = {\n//         user: {},\n//         isLike: false,\n//         likeCount: 0\n//     }\n//     fetchUser = async () => {\n//         await Api.fetchUser(this.props.post.userId).then(res => {\n//             this.setState({ user: res.data })\n//         })\n//     }\n//     componentDidMount() {\n//         this.fetchUser()\n//         this.state.likeCount = this.props.post?.likes.length\n//         this.state.isLike = this.props.post?.likes.includes(this.props.userId)\n//     }\n//     componentDidUpdate(prevProps, prevState) {\n//         if (prevProps.userId !== this.props.userId) {\n//             this.fetchUser()\n//         }\n//     }\n//     likePost = async () => {\n//         const res = await Api.likePost(this.props.post._id, this.props.userId)\n//         return res.status\n//     }\n//     handlerLike = async () => {\n//         const resStatus = await this.likePost()\n//         if (resStatus == 200) {\n//             if (this.state.isLike) {\n//                 this.props.post.likes = this.props.post.likes.filter(e => {\n//                     return e != this.props.userId\n//                 })\n//             } else {\n//                 this.props.post.likes.push(this.props.userId)\n//             }\n//             this.setState({ likeCount: this.props.post?.likes.length })\n//             this.setState({ isLike: !this.state.isLike })\n//         }\n//     }\n//     handleLikeStatusDev() {\n//         if (this.state.isLike == true || this.state.isLike == \"true\") {\n//             return <FavoriteIcon />\n//         } else {\n//             return <FavoriteBorderIcon />\n//         }\n//     }\n//     render() {\n//         return (\n//             <div className=\"card mb-3\">\n//                 <h5 className=\"card-header\">\n//                     <Link to={`/profile/${this.state.user.username}`} className=\"btn btn-sm btn-light\">\n//                         <img className=\"profileImg\" src={this.state.user.profileImg} alt=\"\" />\n//                         <span className=\"username\">{this.state.user.username}</span>\n//                     </Link>\n//                 </h5>\n//                 <img src={this.props.post.img} className=\"card-img-bottom feedImg\" alt=\"...\" />\n//                 <div className=\"card-body\">\n//                     <h5 className=\"card-title\">{this.props.post.title}</h5>\n//                     {\n//                         /* This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer. \n//                         Card title\n//                         */\n//                     }\n//                     <p className=\"card-text\">{this.props.post.desc}</p>\n//                     <p className=\"card-text\"><small className=\"text-muted\">{format(this.props.post.createdAt)}</small></p>\n//                     <button className=\"btn btn-sm btn-danger text-dark\" onClick={() => this.handlerLike()}>\n//                         {this.handleLikeStatusDev()}\n//                         <span className=\"badge bg-light text-dark ms-1\">{this.state.likeCount}</span>\n//                     </button>\n//                     {/* <button className=\"btn btn-sm btn-warning ms-4\">\n//                     <ChatBubbleOutlineIcon />\n//                     <span className=\"badge bg-light text-dark ms-1\">{postCommentCount}</span>\n//                 </button> */}\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n// export default function Post({ post }) {\n//     console.log(post);\n//     let postLikeCount = post.likes.length\n//     console.log(postLikeCount);\n//     let postIsLike = true\n//     const [like, setLike] = useState(postLikeCount)\n//     const [isLike, setIsLike] = useState(postIsLike)\n//     function addLike() {\n//         setLike(isLike ? like - 1 : like + 1)\n//         setIsLike(!isLike)\n//     }\n//     const user = {\n//         username: \"s3q\",\n//         profileImg: \"profile.jpg\"\n//     }\n//     return (\n//         <div className=\"card mb-3\">\n//             <h5 className=\"card-header\">\n//                 <a href=\"#\" type=\"button\" className=\"btn btn-sm btn-light\">\n//                     <img className=\"profileImg\" src={user.profileImg} alt=\"\" />\n//                     <span href=\"#\" className=\"username\">{user.username}</span>\n//                 </a>\n//             </h5>\n//             <img src={post.img} className=\"card-img-bottom feedImg\" alt=\"...\" />\n//             <div className=\"card-body\">\n//                 <h5 className=\"card-title\">{post.title}</h5>\n//                 {\n//                     /* This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer. \n//                     Card title\n//                     */\n//                 }\n//                 <p className=\"card-text\">{post.desc}</p>\n//                 <p className=\"card-text\"><small className=\"text-muted\">{post.createdAt} ago</small></p>\n//                 <button className=\"btn btn-sm btn-danger text-dark\" onClick={addLike()}>\n//                     {\n//                         function () {\n//                             if (isLike == \"true\") {\n//                                 return <FavoriteIcon />\n//                             } else {\n//                                 return <FavoriteBorderIcon />\n//                             }\n//                         }()\n//                     }\n//                     <span className=\"badge bg-light text-dark ms-1\">{like}</span>\n//                 </button>\n//                 {/* <button className=\"btn btn-sm btn-warning ms-4\">\n//                     <ChatBubbleOutlineIcon />\n//                     <span className=\"badge bg-light text-dark ms-1\">{postCommentCount}</span>\n//                 </button> */}\n//             </div>\n//         </div>\n//     )\n// }\n\n_s(Post, \"WX7hfgKuapspQCH8QNd5y/zidfA=\");\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/s3q/Documents/GitHub/medical-encyclopedia/medical-encyclopedia-app/src/components/Post.jsx"],"names":["React","Component","useEffect","useState","useContext","axios","format","Api","Link","Redirect","AuthContext","updateLoginApiContext","v4","uuidv4","FavoriteIcon","FavoriteBorderIcon","ChatBubbleOutlineIcon","MoreHorizIcon","AccountCircleRoundedIcon","MeetingRoomRoundedIcon","SettingsRoundedIcon","CircularProgress","LinearProgress","Post","props","context","user","setUser","post","setPost","likeCount","setLikeCount","isLike","setIsLike","modalId","setModalId","isFetching","setIsFetching","dispatch","fetchPost","postId","then","res","data","fetchUser","userId","_id","likes","length","includes","likePost","console","log","status","handlerLike","resStatus","filter","e","push","handleLikeStatusDev","handelDeletePost","posts","state","p","setPosts","deletePost","username","profileImg","backgroundImage","img","title","desc","createdAt","postLink","window","location","host","navigator","clipboard","writeText"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState, useContext } from 'react'\r\n\r\n// import {addLike} from \"../functions/Post\"\r\n\r\nimport axios from \"axios\"\r\nimport { format } from \"timeago.js\"\r\nimport Api from \"../functions/Api\"\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { updateLoginApiContext } from \"../ApiContext\"\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\r\nimport MeetingRoomRoundedIcon from '@material-ui/icons/MeetingRoomRounded';\r\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';\r\n\r\nimport { CircularProgress, LinearProgress } from \"@material-ui/core\"\r\n\r\n\r\nexport default function Post(props) {\r\n    // props : postId, posts\r\n    const context = useContext(AuthContext)\r\n\r\n    const [user, setUser] = useState({})\r\n    const [post, setPost] = useState({})\r\n    const [likeCount, setLikeCount] = useState(0)\r\n    const [isLike, setIsLike] = useState(false)\r\n\r\n    const [modalId, setModalId] = useState(`A${uuidv4()}`)\r\n\r\n\r\n    const [isFetching, setIsFetching] = useState(false)\r\n\r\n    useEffect(() => {\r\n        updateLoginApiContext(context.dispatch)\r\n    }, [isLike])\r\n\r\n\r\n    const fetchPost = async () => {\r\n        setIsFetching(true)\r\n        await Api.fetchPost(props.postId).then(res => {\r\n            setPost(res.data)\r\n        })\r\n    }\r\n\r\n    const fetchUser = async () => {\r\n        await Api.fetchUser(post.userId).then(res => {\r\n            setUser(res.data)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (post._id) {\r\n            setIsFetching(false)\r\n\r\n            setLikeCount(post?.likes.length)\r\n            setIsLike(post?.likes.includes(context.user._id))\r\n            fetchUser()\r\n        }\r\n\r\n\r\n    }, [post])\r\n\r\n    useEffect(() => {\r\n        setIsFetching(false)\r\n        fetchPost()\r\n    }, [props.postId])\r\n\r\n\r\n    const likePost = async () => {\r\n        console.log(context.user._id)\r\n        const res = await Api.likePost(post._id, context.user._id)\r\n        return res.status\r\n    }\r\n\r\n\r\n    const handlerLike = async () => {\r\n        const resStatus = await likePost()\r\n        if (resStatus == 200) {\r\n            if (isLike) {\r\n                post.likes = post.likes.filter(e => {\r\n                    return e != context.user._id\r\n                })\r\n            } else {\r\n                post.likes.push(context.user._id)\r\n            }\r\n\r\n            setLikeCount(post?.likes.length)\r\n            setIsLike(!isLike)\r\n\r\n            // await updateLoginApiContext(context.dispatch)\r\n        }\r\n    }\r\n\r\n\r\n    function handleLikeStatusDev() {\r\n\r\n        if (isLike == true || isLike == \"true\") {\r\n            return <FavoriteIcon />\r\n        } else {\r\n            return <FavoriteBorderIcon />\r\n        }\r\n\r\n    }\r\n\r\n    const handelDeletePost = async () => {\r\n        if (post._id) {\r\n\r\n            let posts = props.state.posts\r\n            posts = posts.filter(p => p._id != post._id)\r\n\r\n            props.state.setPosts(posts)\r\n\r\n            await Api.deletePost(post._id, context.user._id).then(res => {\r\n                console.log(res.data)\r\n                if (res == 200) {\r\n                    setPost({});\r\n                    return <Redirect to={`/profile/${context.user.username}`} />\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"card mb-5 custom-card\">\r\n                <div className=\"card-header d-flex\">\r\n\r\n                    <div>\r\n\r\n                        <Link to={`/profile/${user.username}`} className=\"btn btn-sm btn-light d-flex align-items-center\">\r\n\r\n                            <div className={`profileImg ${user.profileImg ? `loadImg` : `isLoading`}`} style={{ backgroundImage: (!user.profileImg ? `` : `url(${user.profileImg})`) }} ></div>\r\n                            <span className=\"username\">{user.username}</span>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <button type=\"button\" id={`B${uuidv4()}`} className=\"btn btn-sm btn-light ms-auto rounded-pill\" data-bs-toggle=\"modal\" data-bs-target={`#${modalId}`} >\r\n                        <MoreHorizIcon />\r\n                    </button>\r\n\r\n\r\n                </div>\r\n\r\n                {\r\n                    // isFetching ?\r\n                    // <LinearProgress />\r\n                    // :\r\n                    // <div className=\"bg-light\" style={{ padding: \".12rem\" }}></div>\r\n                }\r\n\r\n                <div style={{ backgroundImage: (!post.img ? `` : `url(${post.img})`) }} sizes=\"614px\" className={`card-img-bottom feedImg ${post.img ? `loadImg` : `isLoading`}`}>\r\n                    {isFetching ?\r\n                        <CircularProgress color=\"secondary\" />\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{post.title}</h5>\r\n\r\n\r\n                    <p className=\"card-text\">{post.desc}</p>\r\n                    <p className=\"card-text\"><small className=\"text-muted\">{format(post.createdAt)}</small></p>\r\n                    <button className=\"btn btn-sm btn-danger text-dark\" onClick={() => handlerLike()}>\r\n                        {handleLikeStatusDev()}\r\n                        <span className=\"badge bg-light text-dark ms-1\">{isFetching ? <CircularProgress size={10} /> : likeCount}</span>\r\n                    </button>\r\n                    {/* <button className=\"btn btn-sm btn-warning ms-4\">\r\n            <ChatBubbleOutlineIcon />\r\n            <span className=\"badge bg-light text-dark ms-1\">{postCommentCount}</span>\r\n        </button> */}\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"modal fade\" id={modalId} tabIndex=\"-1\" aria-labelledby={`B${uuidv4()}`} aria-hidden=\"true\">\r\n                <div className=\"modal-dialog  modal-dialog-centered\">\r\n                    <div className=\"modal-content custom-modal\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">{user.username} - post</h5>\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n\r\n                            {\r\n                                post.userId == context.user._id ? (\r\n\r\n                                    <div class=\"btn-group-vertical w-100\">\r\n                                        <button className=\"btn btn-light\" onClick={handelDeletePost} data-bs-dismiss=\"modal\" aria-label=\"Close\"> delete</button>\r\n                                        <button className=\"btn btn-light\" onClick={() => {\r\n                                            let postLink = `${window.location.host}/preview/post/${post._id}`\r\n                                            navigator.clipboard.writeText(postLink)\r\n                                        }}> getLink</button>\r\n                                    </div>\r\n                                )\r\n                                    :\r\n                                    null\r\n                            }\r\n\r\n\r\n\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            {/* <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"button\" className=\"btn btn-primary\">Save changes</button> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\n\r\n// export default className Post extends Component {\r\n//     // props : post , userId\r\n//     constructor(props) {\r\n//         super(props)\r\n//     }\r\n//     state = {\r\n//         user: {},\r\n//         isLike: false,\r\n//         likeCount: 0\r\n//     }\r\n\r\n\r\n\r\n//     fetchUser = async () => {\r\n//         await Api.fetchUser(this.props.post.userId).then(res => {\r\n//             this.setState({ user: res.data })\r\n//         })\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         this.fetchUser()\r\n\r\n//         this.state.likeCount = this.props.post?.likes.length\r\n//         this.state.isLike = this.props.post?.likes.includes(this.props.userId)\r\n//     }\r\n\r\n//     componentDidUpdate(prevProps, prevState) {\r\n//         if (prevProps.userId !== this.props.userId) {\r\n//             this.fetchUser()\r\n//         }\r\n//     }\r\n\r\n//     likePost = async () => {\r\n//         const res = await Api.likePost(this.props.post._id, this.props.userId)\r\n//         return res.status\r\n//     }\r\n\r\n\r\n//     handlerLike = async () => {\r\n//         const resStatus = await this.likePost()\r\n//         if (resStatus == 200) {\r\n\r\n//             if (this.state.isLike) {\r\n//                 this.props.post.likes = this.props.post.likes.filter(e => {\r\n//                     return e != this.props.userId\r\n//                 })\r\n//             } else {\r\n//                 this.props.post.likes.push(this.props.userId)\r\n//             }\r\n\r\n//             this.setState({ likeCount: this.props.post?.likes.length })\r\n//             this.setState({ isLike: !this.state.isLike })\r\n//         }\r\n\r\n//     }\r\n\r\n//     handleLikeStatusDev() {\r\n\r\n//         if (this.state.isLike == true || this.state.isLike == \"true\") {\r\n//             return <FavoriteIcon />\r\n//         } else {\r\n//             return <FavoriteBorderIcon />\r\n//         }\r\n\r\n//     }\r\n\r\n//     render() {\r\n\r\n//         return (\r\n\r\n//             <div className=\"card mb-3\">\r\n//                 <h5 className=\"card-header\">\r\n//                     <Link to={`/profile/${this.state.user.username}`} className=\"btn btn-sm btn-light\">\r\n//                         <img className=\"profileImg\" src={this.state.user.profileImg} alt=\"\" />\r\n//                         <span className=\"username\">{this.state.user.username}</span>\r\n//                     </Link>\r\n//                 </h5>\r\n//                 <img src={this.props.post.img} className=\"card-img-bottom feedImg\" alt=\"...\" />\r\n//                 <div className=\"card-body\">\r\n//                     <h5 className=\"card-title\">{this.props.post.title}</h5>\r\n//                     {\r\n\r\n//                         /* This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer. \r\n//                         Card title\r\n//                         */\r\n//                     }\r\n//                     <p className=\"card-text\">{this.props.post.desc}</p>\r\n//                     <p className=\"card-text\"><small className=\"text-muted\">{format(this.props.post.createdAt)}</small></p>\r\n//                     <button className=\"btn btn-sm btn-danger text-dark\" onClick={() => this.handlerLike()}>\r\n//                         {this.handleLikeStatusDev()}\r\n//                         <span className=\"badge bg-light text-dark ms-1\">{this.state.likeCount}</span>\r\n//                     </button>\r\n//                     {/* <button className=\"btn btn-sm btn-warning ms-4\">\r\n//                     <ChatBubbleOutlineIcon />\r\n//                     <span className=\"badge bg-light text-dark ms-1\">{postCommentCount}</span>\r\n//                 </button> */}\r\n//                 </div>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n\r\n// export default function Post({ post }) {\r\n//     console.log(post);\r\n//     let postLikeCount = post.likes.length\r\n//     console.log(postLikeCount);\r\n//     let postIsLike = true\r\n\r\n//     const [like, setLike] = useState(postLikeCount)\r\n//     const [isLike, setIsLike] = useState(postIsLike)\r\n\r\n//     function addLike() {\r\n//         setLike(isLike ? like - 1 : like + 1)\r\n//         setIsLike(!isLike)\r\n//     }\r\n\r\n//     const user = {\r\n//         username: \"s3q\",\r\n//         profileImg: \"profile.jpg\"\r\n//     }\r\n\r\n//     return (\r\n//         <div className=\"card mb-3\">\r\n//             <h5 className=\"card-header\">\r\n//                 <a href=\"#\" type=\"button\" className=\"btn btn-sm btn-light\">\r\n//                     <img className=\"profileImg\" src={user.profileImg} alt=\"\" />\r\n//                     <span href=\"#\" className=\"username\">{user.username}</span>\r\n//                 </a>\r\n//             </h5>\r\n//             <img src={post.img} className=\"card-img-bottom feedImg\" alt=\"...\" />\r\n//             <div className=\"card-body\">\r\n//                 <h5 className=\"card-title\">{post.title}</h5>\r\n//                 {\r\n//                     /* This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer. \r\n//                     Card title\r\n//                     */\r\n//                 }\r\n//                 <p className=\"card-text\">{post.desc}</p>\r\n//                 <p className=\"card-text\"><small className=\"text-muted\">{post.createdAt} ago</small></p>\r\n//                 <button className=\"btn btn-sm btn-danger text-dark\" onClick={addLike()}>\r\n//                     {\r\n//                         function () {\r\n//                             if (isLike == \"true\") {\r\n//                                 return <FavoriteIcon />\r\n//                             } else {\r\n//                                 return <FavoriteBorderIcon />\r\n//                             }\r\n//                         }()\r\n//                     }\r\n\r\n//                     <span className=\"badge bg-light text-dark ms-1\">{like}</span>\r\n//                 </button>\r\n//                 {/* <button className=\"btn btn-sm btn-warning ms-4\">\r\n//                     <ChatBubbleOutlineIcon />\r\n//                     <span className=\"badge bg-light text-dark ms-1\">{postCommentCount}</span>\r\n//                 </button> */}\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}