{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\s3q\\\\Documents\\\\GitHub\\\\medical-encyclopedia\\\\medical-encyclopedia-app\\\\src\\\\components\\\\CreatePostBody.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useRef, useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport url_join from \"url-join\";\nimport uuid from \"uuid\";\nimport Api from '../functions/Api';\nimport { AuthContext } from '../context/AuthContext';\nimport { updateLoginApiContext } from \"../ApiContext\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CircularProgress, LinearProgress } from \"@material-ui/core\";\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Browser from '../functions/Browser';\nimport constants from \"../c\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: 1000000000000,\n    color: '#fff'\n  }\n}));\nexport default function PostPostBody() {\n  _s();\n\n  const context = useContext(AuthContext);\n  const inputMedia = useRef();\n  const inputTitle = useRef();\n  const inputDescription = useRef();\n  const [isFetching, setIsFetching] = useState(false);\n  const [isFinishing, setIsFinishing] = useState(false);\n  const classes = useStyles();\n  const [openBackdrop, setOpenBackdrop] = React.useState(false);\n  const {\n    ALLOWED_IMG,\n    ALLOWED_IMG_SIZE\n  } = constants; // const ALLOWED_IMG = [\"image/png\", \"image/jpeg\"]\n  // const ALLOWED_IMG_SIZE = 5\n\n  useEffect(() => {\n    updateLoginApiContext(context.dispatch);\n  }, [isFinishing]);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (!isFetching) {\n      setIsFinishing(false);\n      setOpenBackdrop(true);\n      setIsFetching(true);\n      const [file] = inputMedia.current.files;\n      const postData = {\n        userId: context.user._id,\n        title: inputTitle.current.value,\n        desc: inputDescription.current.value,\n        img: \"\"\n      };\n\n      try {\n        const fromData = new FormData();\n        fromData.append(\"file\", file);\n        await Api.createPost(postData, fromData).then(async res => {\n          console.log(res);\n          setIsFetching(false);\n          setIsFinishing(true);\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  };\n\n  const handleUpload = async e => {\n    const [file] = e.target.files;\n\n    if (file && ALLOWED_IMG.includes(file.type)) {\n      const fileSize = file.size / 1000 / 1000;\n      const img = document.getElementById(\"preview-img\");\n\n      if (file && fileSize < ALLOWED_IMG_SIZE) {\n        img.hidden = false;\n        const reader = new FileReader();\n\n        reader.onload = event => {\n          let imgDataurl = event.target.result;\n          img.style.backgroundImage = `url(${imgDataurl})`; // Browser.resizeImage(imgDataurl, file.type, quality).then(res => {\n          //     let newFileSize = res.length / 100000\n          //     if (newFileSize < 1) {\n          //         img.style.backgroundImage = `url(${imgDataurl})`\n          //     }\n          // })\n          // Browser.compressImg(img, file.type)\n          // Browser.resizeFile(img)\n        };\n\n        reader.readAsDataURL(file);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [isFetching ? /*#__PURE__*/_jsxDEV(Backdrop, {\n      className: classes.backdrop,\n      open: openBackdrop,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }, this) : openBackdrop ? setOpenBackdrop(false) : null, isFinishing ? /*#__PURE__*/_jsxDEV(Redirect, {\n      exact: true,\n      to: `/profile/${context.user.username}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/create/post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 93\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card text-center m-auto custom-card\",\n      style: {\n        maxWidth: \"500px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: \"CREAT POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), isFetching ? /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-light\",\n        style: {\n          padding: \".12rem\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"row g-4\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputTitle\",\n              className: \"form-label\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"inputTitle\",\n              placeholder: \"Title\",\n              ref: inputTitle,\n              maxlength: \"40\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"g-4 mb-5 mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12 mb-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"inputMedia\",\n                className: \"form-label\",\n                children: \"Media File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                className: \"form-control\",\n                id: \"inputMedia\",\n                placeholder: \"Media File\",\n                onChange: handleUpload,\n                accept: \"image/png, image/jpeg\",\n                ref: inputMedia\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"preview\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                sizes: \"614px\",\n                className: `card-img-bottom feedImg`,\n                id: \"preview-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputDescription\",\n              className: \"form-label\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              id: \"inputDescription\",\n              rows: \"3\",\n              ref: inputDescription,\n              maxlength: \"150\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [isFetching ? \"Loading\" : \"Send Post\", isFetching ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  disableShrink: true,\n                  color: \"white\",\n                  size: \"20px\",\n                  className: \"ms-1\",\n                  thickness: 5,\n                  style: {\n                    marginBottom: \"-5px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(SendRoundedIcon, {\n                  className: \"ms-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostPostBody, \"JqlnEQGSR5Tt/deWj1bdyCDLVE0=\", false, function () {\n  return [useStyles];\n});\n\n_c = PostPostBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPostBody\");","map":{"version":3,"sources":["C:/Users/s3q/Documents/GitHub/medical-encyclopedia/medical-encyclopedia-app/src/components/CreatePostBody.jsx"],"names":["React","useContext","useRef","useState","useEffect","Redirect","url_join","uuid","Api","AuthContext","updateLoginApiContext","makeStyles","CircularProgress","LinearProgress","SendRoundedIcon","Backdrop","Browser","constants","useStyles","theme","backdrop","zIndex","color","PostPostBody","context","inputMedia","inputTitle","inputDescription","isFetching","setIsFetching","isFinishing","setIsFinishing","classes","openBackdrop","setOpenBackdrop","ALLOWED_IMG","ALLOWED_IMG_SIZE","dispatch","handleSubmit","event","preventDefault","file","current","files","postData","userId","user","_id","title","value","desc","img","fromData","FormData","append","createPost","then","res","console","log","err","error","handleUpload","e","target","includes","type","fileSize","size","document","getElementById","hidden","reader","FileReader","onload","imgDataurl","result","style","backgroundImage","readAsDataURL","username","maxWidth","padding","marginBottom"],"mappings":"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","sourcesContent":["import React, { useContext, useRef, useState, useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport url_join from \"url-join\"\r\nimport uuid from \"uuid\"\r\nimport Api from '../functions/Api';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { updateLoginApiContext } from \"../ApiContext\"\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CircularProgress, LinearProgress } from \"@material-ui/core\"\r\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Browser from '../functions/Browser';\r\nimport constants from \"../c\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: 1000000000000,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\n\r\nexport default function PostPostBody() {\r\n\r\n    const context = useContext(AuthContext)\r\n\r\n    const inputMedia = useRef()\r\n    const inputTitle = useRef()\r\n    const inputDescription = useRef()\r\n\r\n    const [isFetching, setIsFetching] = useState(false)\r\n    const [isFinishing, setIsFinishing] = useState(false)\r\n\r\n    const classes = useStyles();\r\n    const [openBackdrop, setOpenBackdrop] = React.useState(false);\r\n\r\n    const { ALLOWED_IMG, ALLOWED_IMG_SIZE } = constants\r\n\r\n\r\n    // const ALLOWED_IMG = [\"image/png\", \"image/jpeg\"]\r\n    // const ALLOWED_IMG_SIZE = 5\r\n\r\n \r\n    useEffect(() => {\r\n\r\n        updateLoginApiContext(context.dispatch)\r\n\r\n    }, [isFinishing])\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (!isFetching) {\r\n\r\n            setIsFinishing(false)\r\n            setOpenBackdrop(true)\r\n            setIsFetching(true)\r\n\r\n\r\n            const [file] = inputMedia.current.files\r\n\r\n            const postData = {\r\n                userId: context.user._id,\r\n                title: inputTitle.current.value,\r\n                desc: inputDescription.current.value,\r\n                img: \"\"\r\n            }\r\n\r\n            try {\r\n                const fromData = new FormData()\r\n                fromData.append(\"file\", file)\r\n\r\n\r\n                await Api.createPost(postData, fromData).then(async res => {\r\n                    console.log(res)\r\n                    \r\n                    setIsFetching(false)\r\n                    setIsFinishing(true)\r\n                })\r\n\r\n            } catch (err) {\r\n                console.error(err)\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const handleUpload = async (e) => {\r\n\r\n        const [file] = e.target.files\r\n\r\n        if (file && ALLOWED_IMG.includes(file.type)) {\r\n\r\n            const fileSize = file.size / 1000 / 1000\r\n            \r\n            const img = document.getElementById(\"preview-img\");\r\n\r\n            if (file && fileSize < ALLOWED_IMG_SIZE) {\r\n                img.hidden = false\r\n\r\n                const reader = new FileReader();\r\n                reader.onload = (event) => {\r\n                    let imgDataurl = event.target.result;\r\n                    img.style.backgroundImage = `url(${imgDataurl})`\r\n\r\n                    // Browser.resizeImage(imgDataurl, file.type, quality).then(res => {\r\n                    //     let newFileSize = res.length / 100000\r\n                    //     if (newFileSize < 1) {\r\n                    //         img.style.backgroundImage = `url(${imgDataurl})`\r\n                    //     }\r\n                    // })\r\n                    // Browser.compressImg(img, file.type)\r\n                    // Browser.resizeFile(img)\r\n                };\r\n                reader.readAsDataURL(file);\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            {\r\n                isFetching ?\r\n                    <Backdrop className={classes.backdrop} open={openBackdrop}>\r\n                        <CircularProgress color=\"light\" />\r\n                    </Backdrop>\r\n                    :\r\n                    openBackdrop ? setOpenBackdrop(false) : null\r\n            }\r\n            {\r\n                isFinishing ? <Redirect exact to={`/profile/${context.user.username}`} /> : <Redirect to=\"/create/post\" />\r\n            }\r\n            <div className=\"card text-center m-auto custom-card\" style={{ maxWidth: \"500px\" }}>\r\n\r\n                <div className=\"card-header\">\r\n                    CREAT POST\r\n                </div>\r\n                {\r\n                    isFetching ?\r\n                        <LinearProgress />\r\n                        :\r\n                        <div className=\"bg-light\" style={{ padding: \".12rem\" }}></div>\r\n                }\r\n                <div className=\"card-body\">\r\n\r\n                    <form className=\"row g-4\" onSubmit={handleSubmit}>\r\n                        <div className=\"col-md-6\">\r\n                            <label for=\"inputTitle\" className=\"form-label\">Title</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"inputTitle\" placeholder=\"Title\" ref={inputTitle} maxlength=\"40\" />\r\n                        </div>\r\n                        <div className=\"g-4 mb-5 mt-5\">\r\n                            <hr />\r\n                            <div className=\"col-md-12 mb-5\">\r\n                                <label for=\"inputMedia\" className=\"form-label\">Media File</label>\r\n                                <input type=\"file\" className=\"form-control\" id=\"inputMedia\" placeholder=\"Media File\" onChange={handleUpload} accept=\"image/png, image/jpeg\" ref={inputMedia} />\r\n                            </div>\r\n                            <div id=\"preview\">\r\n                                <div sizes=\"614px\" className={`card-img-bottom feedImg`} id=\"preview-img\">\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                        </div>\r\n\r\n                        <div className=\"col-md-12\">\r\n                            <label for=\"inputDescription\" className=\"form-label\">Description</label>\r\n                            <textarea className=\"form-control\" id=\"inputDescription\" rows=\"3\" ref={inputDescription} maxlength=\"150\"></textarea>\r\n                        </div>\r\n\r\n                        <div className=\"col-12\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n\r\n                                <div>\r\n\r\n                                    {isFetching ? \"Loading\" : \"Send Post\"}\r\n\r\n                                    {\r\n                                        isFetching ?\r\n                                            <CircularProgress disableShrink color=\"white\" size=\"20px\" className=\"ms-1\" thickness={5} style={{ marginBottom: \"-5px\" }} />\r\n                                            :\r\n                                            <SendRoundedIcon className=\"ms-1\" />\r\n                                    }\r\n                                </div>\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}