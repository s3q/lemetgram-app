{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\s3q\\\\Documents\\\\GitHub\\\\medical-encyclopedia\\\\medical-encyclopedia-app\\\\src\\\\pages\\\\Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useContext, useEffect } from 'react';\nimport Navbar from \"../components/Navbar.jsx\";\nimport AsideBar from \"../components/AsideBar.jsx\";\nimport ProfileBody from \"../components/ProfileBody.jsx\";\nimport Post from \"../components/Post\";\nimport Api from \"../functions/Api\";\nimport Browser from \"../functions/Browser\";\nimport { CircularProgress, LinearProgress } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport { AuthContext } from '../context/AuthContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  _s();\n\n  const context = useContext(AuthContext);\n  const {\n    username\n  } = useParams();\n  const [user, setUser] = useState({});\n  const [posts, setPosts] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const [isFinishing, setIsFinishing] = useState(false);\n  useEffect(async () => {\n    setIsFetching(false);\n    await fetchUser();\n  }, [username]);\n\n  const fetchUser = async () => {\n    setIsFetching(true);\n    await Api.fetchUser(username, \"username\").then(res => {\n      console.log(res);\n      setUser(res.data);\n      fetchPosts(res.data);\n    });\n  };\n\n  const fetchPosts = async user => {\n    await Api.fetchUserPosts(user._id).then(res => {\n      setPosts(res.data);\n      setIsFetching(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column flex-md-row h-100 position-relative\",\n      children: [/*#__PURE__*/_jsxDEV(AsideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: isFetching ? /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-light\",\n            style: {\n              padding: \".12rem\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProfileBody, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: isFetching ? /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-light\",\n            style: {\n              padding: \".12rem\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-5\",\n          children: posts.map(post => {\n            return /*#__PURE__*/_jsxDEV(Post, {\n              postId: post._id,\n              state: {\n                posts: posts,\n                setPosts: setPosts\n              }\n            }, post._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profile, \"zQPwyj7iLzk342Cnm4iMj2EHRQg=\", false, function () {\n  return [useParams];\n});\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/s3q/Documents/GitHub/medical-encyclopedia/medical-encyclopedia-app/src/pages/Profile.jsx"],"names":["React","Component","useState","useContext","useEffect","Navbar","AsideBar","ProfileBody","Post","Api","Browser","CircularProgress","LinearProgress","useParams","AuthContext","Profile","context","username","user","setUser","posts","setPosts","isFetching","setIsFetching","isFinishing","setIsFinishing","fetchUser","then","res","console","log","data","fetchPosts","fetchUserPosts","_id","padding","map","post"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,SAAjD,QAAkE,OAAlE;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,mBAAjD;AAGA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,2BAA5B;;AAIA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAE9B,QAAMC,OAAO,GAAGb,UAAU,CAACW,WAAD,CAA1B;AAEA,QAAM;AAAEG,IAAAA;AAAF,MAAeJ,SAAS,EAA9B;AAEA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACsB,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,KAAD,CAA9C;AAIAE,EAAAA,SAAS,CAAC,YAAY;AAClBmB,IAAAA,aAAa,CAAC,KAAD,CAAb;AACA,UAAMG,SAAS,EAAf;AACH,GAHQ,EAGN,CAACT,QAAD,CAHM,CAAT;;AAKA,QAAMS,SAAS,GAAG,YAAY;AAC1BH,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,UAAMd,GAAG,CAACiB,SAAJ,CAAcT,QAAd,EAAwB,UAAxB,EAAoCU,IAApC,CAAyCC,GAAG,IAAI;AAClDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAT,MAAAA,OAAO,CAACS,GAAG,CAACG,IAAL,CAAP;AACAC,MAAAA,UAAU,CAACJ,GAAG,CAACG,IAAL,CAAV;AACH,KAJK,CAAN;AAKH,GAPD;;AAUA,QAAMC,UAAU,GAAG,MAAOd,IAAP,IAAgB;AAC/B,UAAMT,GAAG,CAACwB,cAAJ,CAAmBf,IAAI,CAACgB,GAAxB,EAA6BP,IAA7B,CAAkCC,GAAG,IAAI;AAC3CP,MAAAA,QAAQ,CAACO,GAAG,CAACG,IAAL,CAAR;AACAR,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAHK,CAAN;AAIH,GALD;;AAQA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,wDAAf;AAAA,8BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAEQD,UAAU,gBACN,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,kBADM,gBAGN;AAAK,YAAA,SAAS,EAAC,UAAf;AAA0B,YAAA,KAAK,EAAE;AAAEa,cAAAA,OAAO,EAAE;AAAX;AAAjC;AAAA;AAAA;AAAA;AAAA;AALZ;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI,QAAC,WAAD;AAAa,UAAA,IAAI,EAAEjB;AAAnB;AAAA;AAAA;AAAA;AAAA,gBATJ,eAUI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAGQI,UAAU,gBACN,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,kBADM,gBAGN;AAAK,YAAA,SAAS,EAAC,UAAf;AAA0B,YAAA,KAAK,EAAE;AAAEa,cAAAA,OAAO,EAAE;AAAX;AAAjC;AAAA;AAAA;AAAA;AAAA;AANZ;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAmBI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAGQf,KAAK,CAACgB,GAAN,CAAUC,IAAI,IAAI;AACd,gCAAO,QAAC,IAAD;AAAqB,cAAA,MAAM,EAAEA,IAAI,CAACH,GAAlC;AAAuC,cAAA,KAAK,EAAE;AAAEd,gBAAAA,KAAK,EAAEA,KAAT;AAAgBC,gBAAAA,QAAQ,EAAEA;AAA1B;AAA9C,eAAWgB,IAAI,CAACH,GAAhB;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH,WAFD;AAHR;AAAA;AAAA;AAAA;AAAA,gBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH;;GAzEuBnB,O;UAICF,S;;;KAJDE,O","sourcesContent":["import React, { Component, useState, useContext, useEffect } from 'react'\r\n\r\nimport Navbar from \"../components/Navbar.jsx\"\r\nimport AsideBar from \"../components/AsideBar.jsx\"\r\nimport ProfileBody from \"../components/ProfileBody.jsx\"\r\nimport Post from \"../components/Post\"\r\n\r\nimport Api from \"../functions/Api\"\r\nimport Browser from \"../functions/Browser\"\r\n\r\nimport { CircularProgress, LinearProgress } from \"@material-ui/core\"\r\n\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport { AuthContext } from '../context/AuthContext.js'\r\n\r\n\r\n\r\nexport default function Profile() {\r\n\r\n    const context = useContext(AuthContext)\r\n\r\n    const { username } = useParams()\r\n\r\n    const [user, setUser] = useState({})\r\n    const [posts, setPosts] = useState([])\r\n\r\n    const [isFetching, setIsFetching] = useState(false)\r\n    const [isFinishing, setIsFinishing] = useState(false)\r\n\r\n\r\n\r\n    useEffect(async () => {\r\n        setIsFetching(false)\r\n        await fetchUser()\r\n    }, [username])\r\n\r\n    const fetchUser = async () => {\r\n        setIsFetching(true)\r\n        await Api.fetchUser(username, \"username\").then(res => {\r\n            console.log(res)\r\n            setUser(res.data)\r\n            fetchPosts(res.data)\r\n        })\r\n    }\r\n\r\n\r\n    const fetchPosts = async (user) => {\r\n        await Api.fetchUserPosts(user._id).then(res => {\r\n            setPosts(res.data)\r\n            setIsFetching(false)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"d-flex flex-column flex-md-row h-100 position-relative\">\r\n                <AsideBar />\r\n                <div className=\"body-container\">\r\n                    <div className=\"mb-4\">\r\n                        {\r\n                            isFetching ?\r\n                                <LinearProgress />\r\n                                :\r\n                                <div className=\"bg-light\" style={{ padding: \".12rem\" }}></div>\r\n                        }\r\n                    </div>\r\n                    <ProfileBody user={user} />\r\n                    <div className=\"mb-4\">\r\n\r\n                        {\r\n                            isFetching ?\r\n                                <LinearProgress />\r\n                                :\r\n                                <div className=\"bg-light\" style={{ padding: \".12rem\" }}></div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"mb-5\">\r\n\r\n                        {\r\n                            posts.map(post => {\r\n                                return <Post key={post._id} postId={post._id} state={{ posts: posts, setPosts: setPosts}} />\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}