{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\s3q\\\\Documents\\\\GitHub\\\\medical-encyclopedia\\\\medical-encyclopedia-app\\\\src\\\\context\\\\AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer, useEffect, useState, useRef } from \"react\";\nimport Api from \"../functions/Api\";\nimport Browser from \"../functions/Browser\";\nimport AuthReducer from \"./AuthReducer\";\nimport { io } from \"socket.io-client\";\nimport constants from \"../constant/general\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITAL_STATE = {\n  user: null,\n  isFetching: false,\n  error: false\n};\nexport const AuthContext = /*#__PURE__*/createContext(INITAL_STATE);\n_c = AuthContext;\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(AuthReducer, INITAL_STATE);\n  const [usersIsConnected, setUsersIsConnected] = useState([]);\n  const [socket, setSocket] = useState([]);\n  useEffect(() => setSocket(io(\"https://lemetgram-socket.herokuapp.com\")), []);\n  useEffect(() => {\n    if (state.user && state.user._id) {\n      socket.emit(\"isConnected\", state.user._id);\n      socket.on(\"usersIsConnected\", users => {\n        console.log(users);\n        setUsersIsConnected(users);\n      });\n    }\n  }, [socket, state]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      isFetching: state.isFetching,\n      error: state.error,\n      socket: socket,\n      usersIsConnected,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthContextProvider, \"Dmajia6dq/toQBJbgvvEssdV3dI=\");\n\n_c2 = AuthContextProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AuthContext\");\n$RefreshReg$(_c2, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/s3q/Documents/GitHub/medical-encyclopedia/medical-encyclopedia-app/src/context/AuthContext.js"],"names":["createContext","useReducer","useEffect","useState","useRef","Api","Browser","AuthReducer","io","constants","INITAL_STATE","user","isFetching","error","AuthContext","AuthContextProvider","children","state","dispatch","usersIsConnected","setUsersIsConnected","socket","setSocket","_id","emit","on","users","console","log"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAqCC,SAArC,EAAgDC,QAAhD,EAA0DC,MAA1D,QAAuE,OAAvE;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SAASC,EAAT,QAAmB,kBAAnB;AAEA,OAAOC,SAAP,MAAsB,qBAAtB;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,IADW;AAEjBC,EAAAA,UAAU,EAAE,KAFK;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,OAAO,MAAMC,WAAW,gBAAGd,aAAa,CAACU,YAAD,CAAjC;KAAMI,W;AAEb,OAAO,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACjD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,UAAU,CAACM,WAAD,EAAcG,YAAd,CAApC;AACA,QAAM,CAACS,gBAAD,EAAmBC,mBAAnB,IAA0CjB,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAMoB,SAAS,CAACd,EAAE,CAAC,wCAAD,CAAH,CAAhB,EAAgE,EAAhE,CAAT;AAEAN,EAAAA,SAAS,CAAC,MAAM;AAGZ,QAAIe,KAAK,CAACN,IAAN,IAAcM,KAAK,CAACN,IAAN,CAAWY,GAA7B,EAAkC;AAC9BF,MAAAA,MAAM,CAACG,IAAP,CAAY,aAAZ,EAA2BP,KAAK,CAACN,IAAN,CAAWY,GAAtC;AACAF,MAAAA,MAAM,CAACI,EAAP,CAAU,kBAAV,EAA8BC,KAAK,IAAI;AACnCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAN,QAAAA,mBAAmB,CAACM,KAAD,CAAnB;AACH,OAHD;AAIH;AACJ,GAVQ,EAUN,CAACL,MAAD,EAASJ,KAAT,CAVM,CAAT;AAaA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBN,MAAAA,IAAI,EAAEM,KAAK,CAACN,IADa;AAEzBC,MAAAA,UAAU,EAAEK,KAAK,CAACL,UAFO;AAGzBC,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KAHY;AAKzBQ,MAAAA,MAAM,EAAEA,MALiB;AAMzBF,MAAAA,gBANyB;AAQzBD,MAAAA;AARyB,KAA7B;AAAA,cAUKF;AAVL;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAlCM;;GAAMD,mB;;MAAAA,mB","sourcesContent":["import { createContext, useReducer , useEffect, useState, useRef} from \"react\"\r\nimport Api from \"../functions/Api\"\r\nimport Browser from \"../functions/Browser\"\r\nimport AuthReducer from \"./AuthReducer\"\r\n\r\nimport { io } from \"socket.io-client\"\r\n\r\nimport constants from \"../constant/general\";\r\n\r\nconst INITAL_STATE = {\r\n    user: null,\r\n    isFetching: false,\r\n    error: false\r\n}\r\n\r\nexport const AuthContext = createContext(INITAL_STATE)\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AuthReducer, INITAL_STATE)\r\n    const [usersIsConnected, setUsersIsConnected] = useState([])\r\n    const [socket, setSocket] = useState([])\r\n      \r\n    useEffect(() => setSocket(io(\"https://lemetgram-socket.herokuapp.com\")), [])\r\n\r\n    useEffect(() => {\r\n        \r\n    \r\n        if (state.user && state.user._id) {\r\n            socket.emit(\"isConnected\", state.user._id)\r\n            socket.on(\"usersIsConnected\", users => {\r\n                console.log(users)\r\n                setUsersIsConnected(users)\r\n            })\r\n        }\r\n    }, [socket, state])\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            user: state.user,\r\n            isFetching: state.isFetching,\r\n            error: state.error,\r\n\r\n            socket: socket,\r\n            usersIsConnected,\r\n\r\n            dispatch\r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}