{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\s3q\\\\Documents\\\\GitHub\\\\medical-encyclopedia\\\\medical-encyclopedia-app\\\\src\\\\components\\\\RegisterBody.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useRef, useState, useEffect, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport ExitToAppRoundedIcon from '@material-ui/icons/ExitToAppRounded';\nimport LockOpenRoundedIcon from '@material-ui/icons/LockOpenRounded';\nimport Api from '../functions/Api';\nimport Browser from '../functions/Browser';\nimport constants from \"../constant/general\";\nimport { AuthContext } from '../context/AuthContext';\nimport { loginApiContext } from '../ApiContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CircularProgress, LinearProgress } from \"@material-ui/core\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: 1000000000000,\n    color: '#fff'\n  }\n}));\nexport default function RegisterBody() {\n  _s();\n\n  const context = useContext(AuthContext);\n  const classes = useStyles();\n  const [openBackdrop, setOpenBackdrop] = React.useState(false);\n  const [isFetching, setIsFetching] = useState(false);\n  const inputEmail = useRef();\n  const inputPassword = useRef();\n  const inputPasswordConfirmation = useRef();\n  const inputUsername = useRef();\n  const inputName = useRef();\n  const inputCity = useRef();\n  const inputFrom = useRef();\n  const inputDescription = useRef();\n  const inputCoverImg = useRef();\n  const inputProfileImg = useRef();\n  const {\n    ALLOWED_IMG,\n    ALLOWED_IMG_SIZE\n  } = constants; // const ALLOWED_IMG = [\"image/png\", \"image/jpeg\"]\n  // const ALLOWED_IMG_SIZE = 5\n\n  function checkUserValidate(username) {\n    let validcharacters = '1234567890-_.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    let usernameCheck = username.split(\"\");\n    usernameCheck = usernameCheck.map(uchar => validcharacters.includes(uchar));\n    console.log(usernameCheck);\n\n    if (usernameCheck.includes(false)) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  const handleSubmit = async event => {\n    setOpenBackdrop(true);\n    event.preventDefault();\n    console.log(!context.isFetching);\n\n    if (!context.isFetching) {\n      if (inputPassword.current.value != inputPasswordConfirmation.current.value) {\n        return inputPasswordConfirmation.current.setCustomValidity(\"Password don't match!\");\n      }\n\n      if (!checkUserValidate(inputUsername.current.value)) {\n        return inputUsername.current.setCustomValidity(\"Validate user\");\n      }\n\n      const coverImg = inputCoverImg.current.files[0];\n      const profileImg = inputProfileImg.current.files[0];\n      const userData = {\n        email: inputEmail.current.value,\n        password: inputPassword.current.value,\n        username: inputUsername.current.value,\n        name: inputName.current.value,\n        city: inputCity.current.value,\n        from: inputFrom.current.value,\n        desc: inputDescription.current.value\n      };\n\n      try {\n        setIsFetching(true);\n        const fromData = new FormData();\n        fromData.append(\"coverImg\", coverImg);\n        fromData.append(\"profileImg\", profileImg);\n        console.log(userData);\n        if (coverImg != {}) coverImg.id = \"coverImg\";\n        if (profileImg != {}) profileImg.id = \"profileImg\";\n        await Api.registerUser(userData).then(async res => {\n          console.log(res);\n\n          if (res.status == 200) {\n            console.log(coverImg, profileImg);\n            console.log(!coverImg, !profileImg);\n\n            if (coverImg && profileImg) {\n              const imgData = {\n                set: true\n              };\n              if (coverImg != {}) imgData.coverImg = \"\";\n              if (profileImg != {}) imgData.profileImg = \"\";\n              console.log(imgData);\n              await Api.updateUserImg(res.data._id, res.data._id, imgData, fromData);\n            }\n\n            let userCredentials = {\n              userEmail: inputEmail.current.value,\n              userPassword: inputPassword.current.value\n            };\n            await loginApiContext(userCredentials, context.dispatch).then(res => {\n              if (res.status == 200) {\n                setIsFetching(false);\n              }\n            });\n          }\n        });\n      } catch (err) {\n        setIsFetching(false);\n      }\n    }\n  };\n\n  const handleUpload = async e => {\n    const [file] = e.target.files;\n\n    if (file && ALLOWED_IMG.includes(file.type)) {\n      let img = {};\n      let quality = 7;\n      const fileSize = file.size / 1000 / 1000;\n\n      if (e.target.attributes.id.value == \"inputCoverImg\") {\n        img = document.getElementById(\"preview-coverImg\"); // quality = .3\n      } else if (e.target.attributes.id.value == \"inputProfileImg\") {\n        img = document.getElementById(\"preview-profileImg\"); // quality = .2\n      }\n\n      if (file && fileSize < ALLOWED_IMG_SIZE) {\n        img.hidden = false;\n        const reader = new FileReader();\n\n        reader.onload = event => {\n          let imgDataUrl = event.target.result;\n          img.style.backgroundImage = `url(${imgDataUrl})`; // Browser.resizeImage(imgDataUrl, file.type, quality).then(res => {\n          //     let newFileSize = res.length / 100000\n          //     console.log(res, newFileSize)\n          //     if (newFileSize < 1) {\n          //         img.style.backgroundImage = `url(${res})`\n          //         console.log(img.style.backgroundImage)\n          //     }\n          // })\n        };\n\n        reader.readAsDataURL(file);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [isFetching ? /*#__PURE__*/_jsxDEV(Backdrop, {\n      className: classes.backdrop,\n      open: openBackdrop,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }, this) : openBackdrop ? setOpenBackdrop(false) : null, context.user ? /*#__PURE__*/_jsxDEV(Redirect, {\n      exact: true,\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 32\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 60\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card text-center m-auto custom-card\",\n      style: {\n        maxWidth: \"500px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: \"REGISTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), isFetching ? /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-light\",\n        style: {\n          padding: \".12rem\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"row g-4 \",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputEmail\",\n              className: \"form-label\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-control\",\n              id: \"inputEmail\",\n              placeholder: \"Email\",\n              ref: inputEmail,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputPassword\",\n              className: \"form-label\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              id: \"inputPassword\",\n              minLength: \"6\",\n              placeholder: \"Password\",\n              ref: inputPassword,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputPasswordConfirmation\",\n              className: \"form-label\",\n              children: \"Password Confirmation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              id: \"inputPasswordConfirmation\",\n              minLength: \"6\",\n              placeholder: \"Password Confirmation\",\n              ref: inputPasswordConfirmation,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputUsername\",\n              className: \"form-label\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"inputUsername\",\n              placeholder: \"Username\",\n              required: true,\n              ref: inputUsername\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputName\",\n              className: \"form-label\",\n              children: \"Your Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"inputName\",\n              placeholder: \"You Name\",\n              ref: inputName,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputCity\",\n              className: \"form-label\",\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"inputCity\",\n              placeholder: \"City\",\n              ref: inputCity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputFrom\",\n              className: \"form-label\",\n              children: \"From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"inputFrom\",\n              placeholder: \"From\",\n              ref: inputFrom\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"g-4 mb-5 mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12 mb-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"inputProfileImg\",\n                className: \"form-label\",\n                children: \"Profile Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                className: \"form-control\",\n                id: \"inputProfileImg\",\n                onChange: handleUpload,\n                placeholder: \"profile image\",\n                accept: \"image/png, image/jpeg\",\n                ref: inputProfileImg,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12 mb-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"inputCoverImg\",\n                className: \"form-label\",\n                children: \"Cover Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                className: \"form-control\",\n                id: \"inputCoverImg\",\n                onChange: handleUpload,\n                placeholder: \"profile image\",\n                accept: \"image/png, image/jpeg\",\n                ref: inputCoverImg,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"preview\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `card-img-top coverImg-center`,\n                id: \"preview-coverImg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `profileImg-center shadow-lg p-1 bg-body rounded-circle`,\n                id: \"preview-profileImg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputDescription\",\n              className: \"form-label\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              id: \"inputDescription\",\n              rows: \"3\",\n              ref: inputDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [isFetching ? \"Loading\" : \"Register\", isFetching ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  disableShrink: true,\n                  color: \"white\",\n                  size: \"20px\",\n                  className: \"ms-1\",\n                  thickness: 5,\n                  style: {\n                    marginBottom: \"-5px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(ExitToAppRoundedIcon, {\n                  className: \"ms-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-footer text-muted\",\n        children: [\"I have an account - \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/login\",\n          children: \"login \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RegisterBody, \"rruaAqx3v3Gz3kscFbyCywCu1Hg=\", false, function () {\n  return [useStyles];\n});\n\n_c = RegisterBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterBody\");","map":{"version":3,"sources":["C:/Users/s3q/Documents/GitHub/medical-encyclopedia/medical-encyclopedia-app/src/components/RegisterBody.jsx"],"names":["React","Component","useRef","useState","useEffect","useContext","Redirect","ExitToAppRoundedIcon","LockOpenRoundedIcon","Api","Browser","constants","AuthContext","loginApiContext","makeStyles","CircularProgress","LinearProgress","Backdrop","useStyles","theme","backdrop","zIndex","color","RegisterBody","context","classes","openBackdrop","setOpenBackdrop","isFetching","setIsFetching","inputEmail","inputPassword","inputPasswordConfirmation","inputUsername","inputName","inputCity","inputFrom","inputDescription","inputCoverImg","inputProfileImg","ALLOWED_IMG","ALLOWED_IMG_SIZE","checkUserValidate","username","validcharacters","usernameCheck","split","map","uchar","includes","console","log","handleSubmit","event","preventDefault","current","value","setCustomValidity","coverImg","files","profileImg","userData","email","password","name","city","from","desc","fromData","FormData","append","id","registerUser","then","res","status","imgData","set","updateUserImg","data","_id","userCredentials","userEmail","userPassword","dispatch","err","handleUpload","e","file","target","type","img","quality","fileSize","size","attributes","document","getElementById","hidden","reader","FileReader","onload","imgDataUrl","result","style","backgroundImage","readAsDataURL","user","maxWidth","padding","marginBottom"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,EAA6CC,SAA7C,EAAwDC,UAAxD,QAA0E,OAA1E;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,oBAAP,MAAiC,qCAAjC;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,eAAT,QAAgC,eAAhC;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,mBAAjD;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAGA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACrCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,MAAM,EAAE,aADF;AAENC,IAAAA,KAAK,EAAE;AAFD;AAD2B,CAAZ,CAAD,CAA5B;AAOA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAEnC,QAAMC,OAAO,GAAGnB,UAAU,CAACO,WAAD,CAA1B;AAGA,QAAMa,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkC3B,KAAK,CAACG,QAAN,CAAe,KAAf,CAAxC;AAEA,QAAM,CAACyB,UAAD,EAAaC,aAAb,IAA8B1B,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAM2B,UAAU,GAAG5B,MAAM,EAAzB;AACA,QAAM6B,aAAa,GAAG7B,MAAM,EAA5B;AACA,QAAM8B,yBAAyB,GAAG9B,MAAM,EAAxC;AACA,QAAM+B,aAAa,GAAG/B,MAAM,EAA5B;AACA,QAAMgC,SAAS,GAAGhC,MAAM,EAAxB;AACA,QAAMiC,SAAS,GAAGjC,MAAM,EAAxB;AACA,QAAMkC,SAAS,GAAGlC,MAAM,EAAxB;AACA,QAAMmC,gBAAgB,GAAGnC,MAAM,EAA/B;AACA,QAAMoC,aAAa,GAAGpC,MAAM,EAA5B;AACA,QAAMqC,eAAe,GAAGrC,MAAM,EAA9B;AAEA,QAAM;AAAEsC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAoC9B,SAA1C,CArBmC,CAwBnC;AACA;;AAEA,WAAS+B,iBAAT,CAA2BC,QAA3B,EAAqC;AACjC,QAAIC,eAAe,GAAG,mEAAtB;AAEA,QAAIC,aAAa,GAAGF,QAAQ,CAACG,KAAT,CAAe,EAAf,CAApB;AACAD,IAAAA,aAAa,GAAGA,aAAa,CAACE,GAAd,CAAkBC,KAAK,IAAIJ,eAAe,CAACK,QAAhB,CAAyBD,KAAzB,CAA3B,CAAhB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYN,aAAZ;;AACA,QAAIA,aAAa,CAACI,QAAd,CAAuB,KAAvB,CAAJ,EAAmC;AAC/B,aAAO,KAAP;AACH,KAFD,MAEO;AACH,aAAO,IAAP;AACH;AAEJ;;AAED,QAAMG,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAClC1B,IAAAA,eAAe,CAAC,IAAD,CAAf;AACA0B,IAAAA,KAAK,CAACC,cAAN;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAC3B,OAAO,CAACI,UAArB;;AACA,QAAI,CAACJ,OAAO,CAACI,UAAb,EAAyB;AAErB,UAAIG,aAAa,CAACwB,OAAd,CAAsBC,KAAtB,IAA+BxB,yBAAyB,CAACuB,OAA1B,CAAkCC,KAArE,EAA4E;AACxE,eAAOxB,yBAAyB,CAACuB,OAA1B,CAAkCE,iBAAlC,CAAoD,uBAApD,CAAP;AACH;;AAED,UAAI,CAACf,iBAAiB,CAACT,aAAa,CAACsB,OAAd,CAAsBC,KAAvB,CAAtB,EAAqD;AACjD,eAAOvB,aAAa,CAACsB,OAAd,CAAsBE,iBAAtB,CAAwC,eAAxC,CAAP;AACH;;AAGD,YAAMC,QAAQ,GAAGpB,aAAa,CAACiB,OAAd,CAAsBI,KAAtB,CAA4B,CAA5B,CAAjB;AACA,YAAMC,UAAU,GAAGrB,eAAe,CAACgB,OAAhB,CAAwBI,KAAxB,CAA8B,CAA9B,CAAnB;AAEA,YAAME,QAAQ,GAAG;AACbC,QAAAA,KAAK,EAAEhC,UAAU,CAACyB,OAAX,CAAmBC,KADb;AAEbO,QAAAA,QAAQ,EAAEhC,aAAa,CAACwB,OAAd,CAAsBC,KAFnB;AAGbb,QAAAA,QAAQ,EAAEV,aAAa,CAACsB,OAAd,CAAsBC,KAHnB;AAIbQ,QAAAA,IAAI,EAAE9B,SAAS,CAACqB,OAAV,CAAkBC,KAJX;AAKbS,QAAAA,IAAI,EAAE9B,SAAS,CAACoB,OAAV,CAAkBC,KALX;AAMbU,QAAAA,IAAI,EAAE9B,SAAS,CAACmB,OAAV,CAAkBC,KANX;AAObW,QAAAA,IAAI,EAAE9B,gBAAgB,CAACkB,OAAjB,CAAyBC;AAPlB,OAAjB;;AAUA,UAAI;AACA3B,QAAAA,aAAa,CAAC,IAAD,CAAb;AAGA,cAAMuC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,QAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BZ,QAA5B;AACAU,QAAAA,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8BV,UAA9B;AAEAV,QAAAA,OAAO,CAACC,GAAR,CAAYU,QAAZ;AAEA,YAAIH,QAAQ,IAAI,EAAhB,EAAoBA,QAAQ,CAACa,EAAT,GAAc,UAAd;AACpB,YAAIX,UAAU,IAAI,EAAlB,EAAsBA,UAAU,CAACW,EAAX,GAAgB,YAAhB;AAItB,cAAM9D,GAAG,CAAC+D,YAAJ,CAAiBX,QAAjB,EAA2BY,IAA3B,CAAgC,MAAMC,GAAN,IAAa;AAC/CxB,UAAAA,OAAO,CAACC,GAAR,CAAYuB,GAAZ;;AACA,cAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACnBzB,YAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ,EAAsBE,UAAtB;AACAV,YAAAA,OAAO,CAACC,GAAR,CAAY,CAACO,QAAb,EAAuB,CAACE,UAAxB;;AACA,gBAAIF,QAAQ,IAAIE,UAAhB,EAA4B;AAExB,oBAAMgB,OAAO,GAAG;AACZC,gBAAAA,GAAG,EAAE;AADO,eAAhB;AAKA,kBAAInB,QAAQ,IAAI,EAAhB,EAAoBkB,OAAO,CAAClB,QAAR,GAAmB,EAAnB;AACpB,kBAAIE,UAAU,IAAI,EAAlB,EAAsBgB,OAAO,CAAChB,UAAR,GAAqB,EAArB;AAEtBV,cAAAA,OAAO,CAACC,GAAR,CAAYyB,OAAZ;AAGA,oBAAMnE,GAAG,CAACqE,aAAJ,CAAkBJ,GAAG,CAACK,IAAJ,CAASC,GAA3B,EAAgCN,GAAG,CAACK,IAAJ,CAASC,GAAzC,EAA8CJ,OAA9C,EAAuDR,QAAvD,CAAN;AAEH;;AAED,gBAAIa,eAAe,GAAG;AAClBC,cAAAA,SAAS,EAAEpD,UAAU,CAACyB,OAAX,CAAmBC,KADZ;AAElB2B,cAAAA,YAAY,EAAEpD,aAAa,CAACwB,OAAd,CAAsBC;AAFlB,aAAtB;AAKA,kBAAM3C,eAAe,CAACoE,eAAD,EAAkBzD,OAAO,CAAC4D,QAA1B,CAAf,CAAmDX,IAAnD,CAAwDC,GAAG,IAAI;AACjE,kBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACnB9C,gBAAAA,aAAa,CAAC,KAAD,CAAb;AACH;AACJ,aAJK,CAAN;AAKH;AACJ,SAjCK,CAAN;AAmCH,OAlDD,CAkDE,OAAOwD,GAAP,EAAY;AACVxD,QAAAA,aAAa,CAAC,KAAD,CAAb;AACH;AACJ;AACJ,GAlFD;;AAqFA,QAAMyD,YAAY,GAAG,MAAOC,CAAP,IAAa;AAE9B,UAAM,CAACC,IAAD,IAASD,CAAC,CAACE,MAAF,CAAS9B,KAAxB;;AAEA,QAAI6B,IAAI,IAAIhD,WAAW,CAACS,QAAZ,CAAqBuC,IAAI,CAACE,IAA1B,CAAZ,EAA6C;AAEzC,UAAIC,GAAG,GAAG,EAAV;AACA,UAAIC,OAAO,GAAG,CAAd;AAEA,YAAMC,QAAQ,GAAGL,IAAI,CAACM,IAAL,GAAY,IAAZ,GAAmB,IAApC;;AAEA,UAAIP,CAAC,CAACE,MAAF,CAASM,UAAT,CAAoBxB,EAApB,CAAuBf,KAAvB,IAAgC,eAApC,EAAqD;AAEjDmC,QAAAA,GAAG,GAAGK,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,CAAN,CAFiD,CAGjD;AACH,OAJD,MAKK,IAAIV,CAAC,CAACE,MAAF,CAASM,UAAT,CAAoBxB,EAApB,CAAuBf,KAAvB,IAAgC,iBAApC,EAAuD;AAExDmC,QAAAA,GAAG,GAAGK,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,CAAN,CAFwD,CAGxD;AACH;;AAED,UAAIT,IAAI,IAAIK,QAAQ,GAAGpD,gBAAvB,EAAyC;AACrCkD,QAAAA,GAAG,CAACO,MAAJ,GAAa,KAAb;AAEA,cAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,QAAAA,MAAM,CAACE,MAAP,GAAiBhD,KAAD,IAAW;AACvB,cAAIiD,UAAU,GAAGjD,KAAK,CAACoC,MAAN,CAAac,MAA9B;AACAZ,UAAAA,GAAG,CAACa,KAAJ,CAAUC,eAAV,GAA6B,OAAMH,UAAW,GAA9C,CAFuB,CAIvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,SAZD;;AAaAH,QAAAA,MAAM,CAACO,aAAP,CAAqBlB,IAArB;AAEH;AAEJ;AACJ,GA5CD;;AA+CA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,eAGQ5D,UAAU,gBACN,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEH,OAAO,CAACL,QAA7B;AAAuC,MAAA,IAAI,EAAEM,YAA7C;AAAA,6BACI,QAAC,gBAAD;AAAkB,QAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADM,GAKNA,YAAY,GAAGC,eAAe,CAAC,KAAD,CAAlB,GAA4B,IARpD,EAWQH,OAAO,CAACmF,IAAR,gBAAe,QAAC,QAAD;AAAU,MAAA,KAAK,MAAf;AAAgB,MAAA,EAAE,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAf,gBAA2C,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAXnD,eAaI;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAqD,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAA5D;AAAA,8BAGI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAQQhF,UAAU,gBACN,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cADM,gBAGN;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,KAAK,EAAE;AAAEiF,UAAAA,OAAO,EAAE;AAAX;AAAjC;AAAA;AAAA;AAAA;AAAA,cAXZ,eAaI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,UAAhB;AAA2B,UAAA,QAAQ,EAAEzD,YAArC;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACI;AAAO,cAAA,GAAG,EAAC,YAAX;AAAwB,cAAA,SAAS,EAAC,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,IAAI,EAAC,OAAZ;AAAoB,cAAA,SAAS,EAAC,cAA9B;AAA6C,cAAA,EAAE,EAAC,YAAhD;AAA6D,cAAA,WAAW,EAAC,OAAzE;AAAiF,cAAA,GAAG,EAAEtB,UAAtF;AAAkG,cAAA,QAAQ;AAA1G;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACI;AAAO,cAAA,GAAG,EAAC,eAAX;AAA2B,cAAA,SAAS,EAAC,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,IAAI,EAAC,UAAZ;AAAuB,cAAA,SAAS,EAAC,cAAjC;AAAgD,cAAA,EAAE,EAAC,eAAnD;AAAmE,cAAA,SAAS,EAAC,GAA7E;AAAiF,cAAA,WAAW,EAAC,UAA7F;AAAwG,cAAA,GAAG,EAAEC,aAA7G;AAA4H,cAAA,QAAQ;AAApI;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eASI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACI;AAAO,cAAA,GAAG,EAAC,2BAAX;AAAuC,cAAA,SAAS,EAAC,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,IAAI,EAAC,UAAZ;AAAuB,cAAA,SAAS,EAAC,cAAjC;AAAgD,cAAA,EAAE,EAAC,2BAAnD;AAA+E,cAAA,SAAS,EAAC,GAAzF;AAA6F,cAAA,WAAW,EAAC,uBAAzG;AAAiI,cAAA,GAAG,EAAEC,yBAAtI;AAAiK,cAAA,QAAQ;AAAzK;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,eAaI;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,oCACI;AAAO,cAAA,GAAG,EAAC,eAAX;AAA2B,cAAA,SAAS,EAAC,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,SAAS,EAAC,cAA7B;AAA4C,cAAA,EAAE,EAAC,eAA/C;AAA+D,cAAA,WAAW,EAAC,UAA3E;AAAsF,cAAA,QAAQ,MAA9F;AAA+F,cAAA,GAAG,EAAEC;AAApG;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ,eAiBI;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,oCACI;AAAO,cAAA,GAAG,EAAC,WAAX;AAAuB,cAAA,SAAS,EAAC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,SAAS,EAAC,cAA7B;AAA4C,cAAA,EAAE,EAAC,WAA/C;AAA2D,cAAA,WAAW,EAAC,UAAvE;AAAkF,cAAA,GAAG,EAAEC,SAAvF;AAAkG,cAAA,QAAQ;AAA1G;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBJ,eAqBI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACI;AAAO,cAAA,GAAG,EAAC,WAAX;AAAuB,cAAA,SAAS,EAAC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,SAAS,EAAC,cAA7B;AAA4C,cAAA,EAAE,EAAC,WAA/C;AAA2D,cAAA,WAAW,EAAC,MAAvE;AAA8E,cAAA,GAAG,EAAEC;AAAnF;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBJ,eAyBI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACI;AAAO,cAAA,GAAG,EAAC,WAAX;AAAuB,cAAA,SAAS,EAAC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,SAAS,EAAC,cAA7B;AAA4C,cAAA,EAAE,EAAC,WAA/C;AAA2D,cAAA,WAAW,EAAC,MAAvE;AAA8E,cAAA,GAAG,EAAEC;AAAnF;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzBJ,eA8BI;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,sCACI;AAAO,gBAAA,GAAG,EAAC,iBAAX;AAA6B,gBAAA,SAAS,EAAC,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,SAAS,EAAC,cAA7B;AAA4C,gBAAA,EAAE,EAAC,iBAA/C;AAAiE,gBAAA,QAAQ,EAAEkD,YAA3E;AAAyF,gBAAA,WAAW,EAAC,eAArG;AAAqH,gBAAA,MAAM,EAAC,uBAA5H;AAAoJ,gBAAA,GAAG,EAAE/C,eAAzJ;AAA0K,gBAAA,QAAQ;AAAlL;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAMI;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,sCACI;AAAO,gBAAA,GAAG,EAAC,eAAX;AAA2B,gBAAA,SAAS,EAAC,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,SAAS,EAAC,cAA7B;AAA4C,gBAAA,EAAE,EAAC,eAA/C;AAA+D,gBAAA,QAAQ,EAAE+C,YAAzE;AAAuF,gBAAA,WAAW,EAAC,eAAnG;AAAmH,gBAAA,MAAM,EAAC,uBAA1H;AAAkJ,gBAAA,GAAG,EAAEhD,aAAvJ;AAAsK,gBAAA,QAAQ;AAA9K;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,eAWI;AAAK,cAAA,EAAE,EAAC,SAAR;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAG,8BAAjB;AAAgD,gBAAA,EAAE,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,sBADJ,eAGI;AAAK,gBAAA,SAAS,EAAG,wDAAjB;AAA0E,gBAAA,EAAE,EAAC;AAA7E;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXJ,eAkBI;AAAA;AAAA;AAAA;AAAA,oBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9BJ,eAmDI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACI;AAAO,cAAA,GAAG,EAAC,kBAAX;AAA8B,cAAA,SAAS,EAAC,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAU,cAAA,SAAS,EAAC,cAApB;AAAmC,cAAA,EAAE,EAAC,kBAAtC;AAAyD,cAAA,IAAI,EAAC,GAA9D;AAAkE,cAAA,GAAG,EAAED;AAAvE;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnDJ,eAwDI;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,mCACI;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,SAAS,EAAC,iBAAhC;AAAA,qCACI;AAAA,2BAEKT,UAAU,GAAG,SAAH,GAAe,UAF9B,EAKQA,UAAU,gBACN,QAAC,gBAAD;AAAkB,kBAAA,aAAa,MAA/B;AAAgC,kBAAA,KAAK,EAAC,OAAtC;AAA8C,kBAAA,IAAI,EAAC,MAAnD;AAA0D,kBAAA,SAAS,EAAC,MAApE;AAA2E,kBAAA,SAAS,EAAE,CAAtF;AAAyF,kBAAA,KAAK,EAAE;AAAEkF,oBAAAA,YAAY,EAAE;AAAhB;AAAhG;AAAA;AAAA;AAAA;AAAA,wBADM,gBAGN,QAAC,oBAAD;AAAsB,kBAAA,SAAS,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,wBARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAxDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAbJ,eAuFI;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,wDACwB;AAAG,UAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAvFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2GH;;GAxRuBvF,Y;UAKJL,S;;;KALIK,Y","sourcesContent":["import React, { Component, useRef, useState, useEffect, useContext } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport ExitToAppRoundedIcon from '@material-ui/icons/ExitToAppRounded';\r\nimport LockOpenRoundedIcon from '@material-ui/icons/LockOpenRounded';\r\n\r\nimport Api from '../functions/Api';\r\nimport Browser from '../functions/Browser';\r\nimport constants from \"../constant/general\"\r\n\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { loginApiContext } from '../ApiContext';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CircularProgress, LinearProgress } from \"@material-ui/core\"\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: 1000000000000,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nexport default function RegisterBody() {\r\n\r\n    const context = useContext(AuthContext)\r\n\r\n\r\n    const classes = useStyles();\r\n    const [openBackdrop, setOpenBackdrop] = React.useState(false);\r\n\r\n    const [isFetching, setIsFetching] = useState(false)\r\n\r\n    const inputEmail = useRef()\r\n    const inputPassword = useRef()\r\n    const inputPasswordConfirmation = useRef()\r\n    const inputUsername = useRef()\r\n    const inputName = useRef()\r\n    const inputCity = useRef()\r\n    const inputFrom = useRef()\r\n    const inputDescription = useRef()\r\n    const inputCoverImg = useRef()\r\n    const inputProfileImg = useRef()\r\n\r\n    const { ALLOWED_IMG, ALLOWED_IMG_SIZE } = constants\r\n\r\n\r\n    // const ALLOWED_IMG = [\"image/png\", \"image/jpeg\"]\r\n    // const ALLOWED_IMG_SIZE = 5\r\n\r\n    function checkUserValidate(username) {\r\n        let validcharacters = '1234567890-_.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n\r\n        let usernameCheck = username.split(\"\")\r\n        usernameCheck = usernameCheck.map(uchar => validcharacters.includes(uchar))\r\n        console.log(usernameCheck)\r\n        if (usernameCheck.includes(false)) {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        setOpenBackdrop(true)\r\n        event.preventDefault()\r\n        console.log(!context.isFetching)\r\n        if (!context.isFetching) {\r\n\r\n            if (inputPassword.current.value != inputPasswordConfirmation.current.value) {\r\n                return inputPasswordConfirmation.current.setCustomValidity(\"Password don't match!\")\r\n            }\r\n\r\n            if (!checkUserValidate(inputUsername.current.value)) {\r\n                return inputUsername.current.setCustomValidity(\"Validate user\")\r\n            }\r\n\r\n\r\n            const coverImg = inputCoverImg.current.files[0]\r\n            const profileImg = inputProfileImg.current.files[0]\r\n\r\n            const userData = {\r\n                email: inputEmail.current.value,\r\n                password: inputPassword.current.value,\r\n                username: inputUsername.current.value,\r\n                name: inputName.current.value,\r\n                city: inputCity.current.value,\r\n                from: inputFrom.current.value,\r\n                desc: inputDescription.current.value,\r\n            }\r\n\r\n            try {\r\n                setIsFetching(true)\r\n\r\n\r\n                const fromData = new FormData()\r\n                fromData.append(\"coverImg\", coverImg)\r\n                fromData.append(\"profileImg\", profileImg)\r\n\r\n                console.log(userData)\r\n\r\n                if (coverImg != {}) coverImg.id = \"coverImg\"\r\n                if (profileImg != {}) profileImg.id = \"profileImg\"\r\n\r\n\r\n\r\n                await Api.registerUser(userData).then(async res => {\r\n                    console.log(res)\r\n                    if (res.status == 200) {\r\n                        console.log(coverImg, profileImg)\r\n                        console.log(!coverImg, !profileImg)\r\n                        if (coverImg && profileImg) {\r\n\r\n                            const imgData = {\r\n                                set: true\r\n                            }\r\n\r\n\r\n                            if (coverImg != {}) imgData.coverImg = \"\"\r\n                            if (profileImg != {}) imgData.profileImg = \"\"\r\n\r\n                            console.log(imgData)\r\n\r\n\r\n                            await Api.updateUserImg(res.data._id, res.data._id, imgData, fromData)\r\n\r\n                        }\r\n\r\n                        let userCredentials = {\r\n                            userEmail: inputEmail.current.value,\r\n                            userPassword: inputPassword.current.value\r\n                        }\r\n\r\n                        await loginApiContext(userCredentials, context.dispatch).then(res => {\r\n                            if (res.status == 200) {\r\n                                setIsFetching(false)\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n\r\n            } catch (err) {\r\n                setIsFetching(false)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const handleUpload = async (e) => {\r\n\r\n        const [file] = e.target.files\r\n\r\n        if (file && ALLOWED_IMG.includes(file.type)) {\r\n\r\n            let img = {}\r\n            let quality = 7\r\n\r\n            const fileSize = file.size / 1000 / 1000\r\n\r\n            if (e.target.attributes.id.value == \"inputCoverImg\") {\r\n\r\n                img = document.getElementById(\"preview-coverImg\")\r\n                // quality = .3\r\n            }\r\n            else if (e.target.attributes.id.value == \"inputProfileImg\") {\r\n\r\n                img = document.getElementById(\"preview-profileImg\")\r\n                // quality = .2\r\n            }\r\n\r\n            if (file && fileSize < ALLOWED_IMG_SIZE) {\r\n                img.hidden = false\r\n\r\n                const reader = new FileReader();\r\n                reader.onload = (event) => {\r\n                    let imgDataUrl = event.target.result;\r\n                    img.style.backgroundImage = `url(${imgDataUrl})`\r\n\r\n                    // Browser.resizeImage(imgDataUrl, file.type, quality).then(res => {\r\n                    //     let newFileSize = res.length / 100000\r\n                    //     console.log(res, newFileSize)\r\n                    //     if (newFileSize < 1) {\r\n                    //         img.style.backgroundImage = `url(${res})`\r\n                    //         console.log(img.style.backgroundImage)\r\n                    //     }\r\n                    // })\r\n                };\r\n                reader.readAsDataURL(file);\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            {\r\n                isFetching ?\r\n                    <Backdrop className={classes.backdrop} open={openBackdrop}>\r\n                        <CircularProgress color=\"light\" />\r\n                    </Backdrop>\r\n                    :\r\n                    openBackdrop ? setOpenBackdrop(false) : null\r\n            }\r\n            {\r\n                context.user ? <Redirect exact to=\"/\" /> : <Redirect to=\"/register\" />\r\n            }\r\n            <div className=\"card text-center m-auto custom-card\" style={{ maxWidth: \"500px\" }}>\r\n\r\n\r\n                <div className=\"card-header\">\r\n                    REGISTER\r\n                </div>\r\n                {\r\n\r\n                    isFetching ?\r\n                        <LinearProgress />\r\n                        :\r\n                        <div className=\"bg-light\" style={{ padding: \".12rem\" }}></div>\r\n                }\r\n                <div className=\"card-body\">\r\n                    <form className=\"row g-4 \" onSubmit={handleSubmit}>\r\n                        <div className=\"col-md-6\">\r\n                            <label for=\"inputEmail\" className=\"form-label\">Email</label>\r\n                            <input type=\"email\" className=\"form-control\" id=\"inputEmail\" placeholder=\"Email\" ref={inputEmail} required />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label for=\"inputPassword\" className=\"form-label\">Password</label>\r\n                            <input type=\"password\" className=\"form-control\" id=\"inputPassword\" minLength=\"6\" placeholder=\"Password\" ref={inputPassword} required />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label for=\"inputPasswordConfirmation\" className=\"form-label\">Password Confirmation</label>\r\n                            <input type=\"password\" className=\"form-control\" id=\"inputPasswordConfirmation\" minLength=\"6\" placeholder=\"Password Confirmation\" ref={inputPasswordConfirmation} required />\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <label for=\"inputUsername\" className=\"form-label\">Username</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"inputUsername\" placeholder=\"Username\" required ref={inputUsername} />\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <label for=\"inputName\" className=\"form-label\">Your Name</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"inputName\" placeholder=\"You Name\" ref={inputName} required />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label for=\"inputCity\" className=\"form-label\">City</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"inputCity\" placeholder=\"City\" ref={inputCity} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label for=\"inputFrom\" className=\"form-label\">From</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"inputFrom\" placeholder=\"From\" ref={inputFrom} />\r\n                        </div>\r\n\r\n                        <div className=\"g-4 mb-5 mt-5\">\r\n                            <hr />\r\n                            <div className=\"col-md-12 mb-5\">\r\n                                <label for=\"inputProfileImg\" className=\"form-label\">Profile Image</label>\r\n                                <input type=\"file\" className=\"form-control\" id=\"inputProfileImg\" onChange={handleUpload} placeholder=\"profile image\" accept=\"image/png, image/jpeg\" ref={inputProfileImg} required />\r\n                            </div>\r\n                            <div className=\"col-md-12 mb-5\">\r\n                                <label for=\"inputCoverImg\" className=\"form-label\">Cover Image</label>\r\n                                <input type=\"file\" className=\"form-control\" id=\"inputCoverImg\" onChange={handleUpload} placeholder=\"profile image\" accept=\"image/png, image/jpeg\" ref={inputCoverImg} required />\r\n                            </div>\r\n\r\n                            <div id=\"preview\">\r\n                                <div className={`card-img-top coverImg-center`} id=\"preview-coverImg\" >\r\n                                </div>\r\n                                <div className={`profileImg-center shadow-lg p-1 bg-body rounded-circle`} id=\"preview-profileImg\" >\r\n                                </div>\r\n                            </div>\r\n\r\n                            <hr />\r\n                        </div>\r\n\r\n                        <div className=\"col-md-12\">\r\n                            <label for=\"inputDescription\" className=\"form-label\">Description</label>\r\n                            <textarea className=\"form-control\" id=\"inputDescription\" rows=\"3\" ref={inputDescription}></textarea>\r\n                        </div>\r\n\r\n                        <div className=\"col-12\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                <div>\r\n\r\n                                    {isFetching ? \"Loading\" : \"Register\"}\r\n\r\n                                    {\r\n                                        isFetching ?\r\n                                            <CircularProgress disableShrink color=\"white\" size=\"20px\" className=\"ms-1\" thickness={5} style={{ marginBottom: \"-5px\" }} />\r\n                                            :\r\n                                            <ExitToAppRoundedIcon className=\"ms-1\" />\r\n                                    }\r\n                                </div>\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"card-footer text-muted\">\r\n                    I have an account - <a href=\"/login\">login </a>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}