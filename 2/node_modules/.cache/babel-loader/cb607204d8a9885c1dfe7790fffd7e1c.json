{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\s3q\\\\Documents\\\\GitHub\\\\medical-encyclopedia\\\\medical-encyclopedia-app\\\\src\\\\components\\\\LoginBody.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState, useContext, useRef } from 'react';\nimport { Redirect, Route, Link, useHistory } from 'react-router-dom';\nimport Api from '../functions/Api'; // context \n\nimport { AuthContext } from '../context/AuthContext';\nimport { loginApiContext, autoLoginApiContext } from '../ApiContext'; // material \n\nimport { makeStyles } from '@material-ui/core/styles';\nimport LockOpenRoundedIcon from '@material-ui/icons/LockOpenRounded';\nimport { CircularProgress, LinearProgress } from \"@material-ui/core\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Browser from '../functions/Browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: 1000000000000,\n    color: '#fff'\n  }\n}));\nexport default function LoginBody() {\n  _s();\n\n  const context = useContext(AuthContext);\n  const history = useHistory();\n  const inputEmail = useRef();\n  const inputPassword = useRef();\n  const classes = useStyles();\n  const [openBackdrop, setOpenBackdrop] = React.useState(false);\n  useEffect(async () => {// await autoLoginApiContext(context.dispatch)\n    // console.log(res)\n    // let lastUrlVistedArray = Browser.getHistoryUrl()\n    // console.log(lastUrlVistedArray)\n    // let lastUrlVisted = lastUrlVistedArray[lastUrlVistedArray.length - 1]\n    // console.log(lastUrlVisted, window.location.href, lastUrlVisted != window.location.href)\n    // history.go(\"http://localhost:3000/profile/test2\")\n    // if (lastUrlVisted != window.location.href) {\n    //     history.go(lastUrlVisted)\n    // } \n    // else {\n    //     history.go(window.location.host)\n    // }\n  }, []);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setOpenBackdrop(true);\n    let userCredentials = {\n      userEmail: inputEmail.current.value,\n      userPassword: inputPassword.current.value\n    };\n    const res = await loginApiContext(userCredentials, context.dispatch);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [context.isFetching ? /*#__PURE__*/_jsxDEV(Backdrop, {\n      className: classes.backdrop,\n      open: openBackdrop,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }, this) : openBackdrop ? setOpenBackdrop(false) : null // setOpen(false)\n    , context.user ? /*#__PURE__*/_jsxDEV(Redirect, {\n      exact: true,\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 32\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 60\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card text-center m-auto custom-card\",\n      style: {\n        maxWidth: \"500px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: \"LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), context.isFetching ? /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 39\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-light\",\n        style: {\n          padding: \".12rem\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 60\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"row g-4\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"inputEmail\",\n              className: \"form-label\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-control\",\n              id: \"inputEmail\",\n              placeholder: \"Email\",\n              required: true,\n              ref: inputEmail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"inputPassword\",\n              className: \"form-label\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              id: \"inputPassword\",\n              minLength: \"6\",\n              placeholder: \"Password\",\n              required: true,\n              ref: inputPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary text-center position-relative\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [context.isFetching ? \"Loading\" : \"Login\", context.isFetching ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  disableShrink: true,\n                  color: \"white\",\n                  size: \"20px\",\n                  className: \"ms-1\",\n                  thickness: 5,\n                  style: {\n                    marginBottom: \"-5px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(LockOpenRoundedIcon, {\n                  className: \"ms-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-footer text-muted\",\n        children: [\"I don't have an account - \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"register \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n} // export default class LoginBody extends Component {\n//     constructor(props) {\n//         super(props)\n//         this.handleSubmit = this.handleSubmit.bind(this);\n//     }\n//     state = {\n//         inputEmail: \"\",\n//         inputPassword: \"\"\n//     }\n//     handleChange(event, stateStr) {\n//         this.setState({ [stateStr]: event.target.value });\n//     }\n//     loginUser = async (userEmail, userPassword) => {\n//         return await Api.loginUser(userEmail, userPassword)\n//     }\n//     handleSubmit = async (event) => {\n//         event.preventDefault();\n//         const res = await this.loginUser(this.state.inputEmail, this.state.inputPassword)\n//         if (res.status == 200) {\n//             console.log(\"login seccssufly !!!!\")\n//             const [setUser, setAuth] = this.context.setContext\n//             setUser(res.data)\n//             if (this.context.state.user) {\n//                 setAuth(true)\n//             }\n//         }\n//     }\n//     componentDidMount() {\n//         console.log(this.context, this.context.state.user)\n//     }\n//     render() {\n//         return (\n//             <React.Fragment>\n//                 {\n//                     this.context.state.isAuthenticated ? <Redirect exact to=\"/\" /> : <Redirect to=\"/login\" />\n//                 }\n//                 <div className=\"card text-center m-auto\" style={{ maxWidth: \"500px\" }}>\n//                     <div className=\"card-header\">\n//                         REGISTER\n//                     </div>\n//                     <div className=\"card-body\">\n//                         <form className=\"row g-4\" onSubmit={this.handleSubmit}>\n//                             <div className=\"col-md-6\">\n//                                 <label for=\"inputEmail\" className=\"form-label\">Email</label>\n//                                 <input type=\"email\" className=\"form-control\" id=\"inputEmail\" placeholder=\"Email\" onChange={(e) => this.handleChange(e, \"inputEmail\")} />\n//                             </div>\n//                             <div className=\"col-md-6\">\n//                                 <label for=\"inputPassword\" className=\"form-label\">Password</label>\n//                                 <input type=\"password\" className=\"form-control\" id=\"inputPassword\" placeholder=\"Password\" onChange={(e) => this.handleChange(e, \"inputPassword\")} />\n//                             </div>\n//                             <div className=\"col-12\">\n//                                 <button type=\"submit\" className=\"btn btn-primary\" >Login <LockOpenRoundedIcon /> </button>\n//                             </div>\n//                         </form>\n//                     </div>\n//                     <div className=\"card-footer text-muted\">\n//                         I don't have an account - <a href=\"/register\">register </a>\n//                     </div>\n//                 </div>\n//             </React.Fragment>\n//         )\n//     }\n// }\n// LoginBody.contextType = AppContext\n\n_s(LoginBody, \"gVqeNvZi7cEfuUW+TbvstdUY2kw=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = LoginBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginBody\");","map":{"version":3,"sources":["C:/Users/s3q/Documents/GitHub/medical-encyclopedia/medical-encyclopedia-app/src/components/LoginBody.jsx"],"names":["React","Component","useEffect","useState","useContext","useRef","Redirect","Route","Link","useHistory","Api","AuthContext","loginApiContext","autoLoginApiContext","makeStyles","LockOpenRoundedIcon","CircularProgress","LinearProgress","Backdrop","Browser","useStyles","theme","backdrop","zIndex","color","LoginBody","context","history","inputEmail","inputPassword","classes","openBackdrop","setOpenBackdrop","handleSubmit","event","preventDefault","userCredentials","userEmail","current","value","userPassword","res","dispatch","isFetching","user","maxWidth","padding","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState, useContext, useRef } from 'react'\r\n\r\nimport {\r\n    Redirect,\r\n    Route,\r\n    Link,\r\n    useHistory\r\n\r\n} from 'react-router-dom';\r\n\r\nimport Api from '../functions/Api';\r\n\r\n// context \r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { loginApiContext, autoLoginApiContext } from '../ApiContext';\r\n\r\n// material \r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockOpenRoundedIcon from '@material-ui/icons/LockOpenRounded';\r\nimport { CircularProgress, LinearProgress } from \"@material-ui/core\"\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Browser from '../functions/Browser';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: 1000000000000,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\n\r\nexport default function LoginBody() {\r\n    const context = useContext(AuthContext)\r\n    const history = useHistory()\r\n\r\n    const inputEmail = useRef()\r\n    const inputPassword = useRef()\r\n\r\n    const classes = useStyles();\r\n    const [openBackdrop, setOpenBackdrop] = React.useState(false);\r\n\r\n    useEffect(async () => {\r\n\r\n        // await autoLoginApiContext(context.dispatch)\r\n\r\n            // console.log(res)\r\n            // let lastUrlVistedArray = Browser.getHistoryUrl()\r\n            // console.log(lastUrlVistedArray)\r\n            // let lastUrlVisted = lastUrlVistedArray[lastUrlVistedArray.length - 1]\r\n            // console.log(lastUrlVisted, window.location.href, lastUrlVisted != window.location.href)\r\n\r\n            // history.go(\"http://localhost:3000/profile/test2\")\r\n            // if (lastUrlVisted != window.location.href) {\r\n\r\n            //     history.go(lastUrlVisted)\r\n            // } \r\n            // else {\r\n            //     history.go(window.location.host)\r\n            // }\r\n\r\n\r\n    }, [])\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        setOpenBackdrop(true);\r\n\r\n        let userCredentials = {\r\n            userEmail: inputEmail.current.value,\r\n            userPassword: inputPassword.current.value\r\n        }\r\n\r\n        const res = await loginApiContext(userCredentials, context.dispatch)\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            {\r\n                context.isFetching ?\r\n                    <Backdrop className={classes.backdrop} open={openBackdrop}>\r\n                        <CircularProgress color=\"light\" />\r\n                    </Backdrop>\r\n                    :\r\n                    openBackdrop ? setOpenBackdrop(false) : null\r\n                // setOpen(false)\r\n            }\r\n            {\r\n                context.user ? <Redirect exact to=\"/\" /> : <Redirect to=\"/login\" />\r\n            }\r\n            <div className=\"card text-center m-auto custom-card\" style={{ maxWidth: \"500px\" }}>\r\n                <div className=\"card-header\">\r\n                    LOGIN\r\n                </div>\r\n                {context.isFetching ? <LinearProgress /> : <div className=\"bg-light\" style={{ padding: \".12rem\" }}></div>}\r\n                <div className=\"card-body\">\r\n                    <form className=\"row g-4\" onSubmit={handleSubmit}>\r\n                        <div className=\"col-md-6\">\r\n                            <label htmlFor=\"inputEmail\" className=\"form-label\">Email</label>\r\n                            <input type=\"email\" className=\"form-control\" id=\"inputEmail\" placeholder=\"Email\" required ref={inputEmail} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label htmlFor=\"inputPassword\" className=\"form-label\">Password</label>\r\n                            <input type=\"password\" className=\"form-control\" id=\"inputPassword\" minLength=\"6\" placeholder=\"Password\" required ref={inputPassword} />\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <button type=\"submit\" className=\"btn btn-primary text-center position-relative\">\r\n                                <div>\r\n\r\n                                    {context.isFetching ? \"Loading\" : \"Login\"}\r\n\r\n                                    {\r\n                                        context.isFetching ?\r\n                                            <CircularProgress disableShrink color=\"white\" size=\"20px\" className=\"ms-1\" thickness={5} style={{ marginBottom: \"-5px\" }} />\r\n                                            :\r\n                                            <LockOpenRoundedIcon className=\"ms-1\" />\r\n                                    }\r\n                                </div>\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"card-footer text-muted\">\r\n\r\n                    I don't have an account - <Link to=\"/register\">register </Link>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\n// export default class LoginBody extends Component {\r\n\r\n//     constructor(props) {\r\n//         super(props)\r\n//         this.handleSubmit = this.handleSubmit.bind(this);\r\n//     }\r\n//     state = {\r\n//         inputEmail: \"\",\r\n//         inputPassword: \"\"\r\n//     }\r\n\r\n//     handleChange(event, stateStr) {\r\n//         this.setState({ [stateStr]: event.target.value });\r\n//     }\r\n\r\n//     loginUser = async (userEmail, userPassword) => {\r\n//         return await Api.loginUser(userEmail, userPassword)\r\n//     }\r\n\r\n//     handleSubmit = async (event) => {\r\n//         event.preventDefault();\r\n//         const res = await this.loginUser(this.state.inputEmail, this.state.inputPassword)\r\n//         if (res.status == 200) {\r\n//             console.log(\"login seccssufly !!!!\")\r\n//             const [setUser, setAuth] = this.context.setContext\r\n//             setUser(res.data)\r\n\r\n//             if (this.context.state.user) {\r\n//                 setAuth(true)\r\n//             }\r\n\r\n//         }\r\n//     }\r\n\r\n\r\n//     componentDidMount() {\r\n//         console.log(this.context, this.context.state.user)\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <React.Fragment>\r\n//                 {\r\n//                     this.context.state.isAuthenticated ? <Redirect exact to=\"/\" /> : <Redirect to=\"/login\" />\r\n//                 }\r\n//                 <div className=\"card text-center m-auto\" style={{ maxWidth: \"500px\" }}>\r\n//                     <div className=\"card-header\">\r\n//                         REGISTER\r\n//                     </div>\r\n//                     <div className=\"card-body\">\r\n//                         <form className=\"row g-4\" onSubmit={this.handleSubmit}>\r\n//                             <div className=\"col-md-6\">\r\n//                                 <label for=\"inputEmail\" className=\"form-label\">Email</label>\r\n//                                 <input type=\"email\" className=\"form-control\" id=\"inputEmail\" placeholder=\"Email\" onChange={(e) => this.handleChange(e, \"inputEmail\")} />\r\n//                             </div>\r\n//                             <div className=\"col-md-6\">\r\n//                                 <label for=\"inputPassword\" className=\"form-label\">Password</label>\r\n//                                 <input type=\"password\" className=\"form-control\" id=\"inputPassword\" placeholder=\"Password\" onChange={(e) => this.handleChange(e, \"inputPassword\")} />\r\n//                             </div>\r\n//                             <div className=\"col-12\">\r\n//                                 <button type=\"submit\" className=\"btn btn-primary\" >Login <LockOpenRoundedIcon /> </button>\r\n//                             </div>\r\n//                         </form>\r\n//                     </div>\r\n//                     <div className=\"card-footer text-muted\">\r\n//                         I don't have an account - <a href=\"/register\">register </a>\r\n//                     </div>\r\n//                 </div>\r\n\r\n//             </React.Fragment>\r\n\r\n//         )\r\n//     }\r\n// }\r\n\r\n// LoginBody.contextType = AppContext"]},"metadata":{},"sourceType":"module"}