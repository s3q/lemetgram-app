{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\s3q\\\\Documents\\\\GitHub\\\\medical-encyclopedia\\\\medical-encyclopedia-app\\\\src\\\\components\\\\Body.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState, useContext } from 'react';\nimport SahreBar from \"./SahreBar.jsx\";\nimport Post from \"./Post.jsx\";\nimport { CircularProgress, LinearProgress } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport Api from \"../functions/Api\";\nimport { AuthContext } from '../context/AuthContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Body() {\n  _s();\n\n  const context = useContext(AuthContext);\n  const [user, setUser] = useState(context.user);\n  const [posts, setPosts] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const [isFinishing, setIsFinishing] = useState(false);\n\n  const fetchPosts = async () => {\n    setIsFetching(true);\n    await Api.fetchAllPostsId(context.user._id).then(res => {\n      console.log(res.data);\n      setPosts(res.data);\n      setIsFetching(false);\n    });\n  };\n\n  useEffect(() => {\n    setIsFetching(false);\n    fetchPosts(); // fetchUser()\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body-container\",\n    children: [/*#__PURE__*/_jsxDEV(SahreBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: isFetching ? /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-light\",\n          style: {\n            padding: \".12rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), posts.map(post => {\n        console.log(post._id);\n        return /*#__PURE__*/_jsxDEV(Post, {\n          postId: post._id\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 32\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n} // export default class Body extends Component {\n//     // props : userId\n//     constructor(props) {\n//         super(props)\n//     }\n//     state = {\n//         posts: [],\n//         user: {}\n//     }\n//     fetchUser = async () => {\n//         await Api.fetchUser(this.props.userId).then(res => {\n//             this.setState({ user: res.data })\n//         })\n//     }\n//     fetchPosts = async () => {\n//         await Api.fetchAllPosts(this.props.userId).then(res => {\n//             this.setState({ posts: res.data })\n//         })\n//     }\n//     componentDidMount() {\n//         this.fetchPosts()\n//         this.fetchUser()\n//     }\n//     // componentDidUpdate(prevProps, prevState) {}\n//     render() {\n//         return (\n//             <div className=\"body-container\">\n//                 <SahreBar user={this.state.user} />\n//                 <div className=\"\">\n//                     {\n//                         this.state.posts.map(post => {\n//                             return <Post key={post._id} post={post} userId={this.props.userId} />\n//                         })\n//                     }\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\n_s(Body, \"zZb1ZtWXz6MSM7ZY9fhWkp7yUTQ=\");\n\n_c = Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["C:/Users/s3q/Documents/GitHub/medical-encyclopedia/medical-encyclopedia-app/src/components/Body.jsx"],"names":["React","Component","useEffect","useState","useContext","SahreBar","Post","CircularProgress","LinearProgress","axios","Api","AuthContext","Body","context","user","setUser","posts","setPosts","isFetching","setIsFetching","isFinishing","setIsFinishing","fetchPosts","fetchAllPostsId","_id","then","res","console","log","data","padding","map","post"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,EAAgDC,UAAhD,QAAkE,OAAlE;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AAGA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,mBAAjD;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,WAAT,QAA4B,2BAA5B;;AAIA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAE3B,QAAMC,OAAO,GAAGT,UAAU,CAACO,WAAD,CAA1B;AAEA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAACU,OAAO,CAACC,IAAT,CAAhC;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,KAAD,CAA9C;;AAIA,QAAMmB,UAAU,GAAG,YAAY;AAC3BH,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,UAAMT,GAAG,CAACa,eAAJ,CAAoBV,OAAO,CAACC,IAAR,CAAaU,GAAjC,EAAsCC,IAAtC,CAA2CC,GAAG,IAAI;AACpDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAZ,MAAAA,QAAQ,CAACS,GAAG,CAACG,IAAL,CAAR;AACAV,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAJK,CAAN;AAMH,GARD;;AAUAjB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAG,IAAAA,UAAU,GAFE,CAGZ;AACH,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBAEQJ,UAAU,gBACN,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBADM,gBAGN;AAAK,UAAA,SAAS,EAAC,UAAf;AAA0B,UAAA,KAAK,EAAE;AAAEY,YAAAA,OAAO,EAAE;AAAX;AAAjC;AAAA;AAAA;AAAA;AAAA;AALZ;AAAA;AAAA;AAAA;AAAA,cADJ,EAUQd,KAAK,CAACe,GAAN,CAAUC,IAAI,IAAI;AACdL,QAAAA,OAAO,CAACC,GAAR,CAAYI,IAAI,CAACR,GAAjB;AACA,4BAAO,QAAC,IAAD;AAAqB,UAAA,MAAM,EAAEQ,IAAI,CAACR;AAAlC,WAAWQ,IAAI,CAACR,GAAhB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAHD,CAVR;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,C,CAID;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;GA5GwBZ,I;;KAAAA,I","sourcesContent":["import React, { Component, useEffect, useState, useContext } from 'react';\r\n\r\nimport SahreBar from \"./SahreBar.jsx\"\r\nimport Post from \"./Post.jsx\"\r\n\r\n\r\nimport { CircularProgress, LinearProgress } from \"@material-ui/core\"\r\n\r\n\r\nimport axios from \"axios\"\r\nimport Api from \"../functions/Api\"\r\nimport { AuthContext } from '../context/AuthContext.js';\r\n\r\n\r\n\r\nexport default function Body() {\r\n\r\n    const context = useContext(AuthContext)\r\n\r\n    const [user, setUser] = useState(context.user)\r\n    const [posts, setPosts] = useState([])\r\n\r\n    const [isFetching, setIsFetching] = useState(false)\r\n    const [isFinishing, setIsFinishing] = useState(false)\r\n\r\n\r\n\r\n    const fetchPosts = async () => {\r\n        setIsFetching(true)\r\n        await Api.fetchAllPostsId(context.user._id).then(res => {\r\n            console.log(res.data)\r\n            setPosts(res.data)\r\n            setIsFetching(false)\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsFetching(false)\r\n        fetchPosts()\r\n        // fetchUser()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"body-container\">\r\n            <SahreBar />\r\n\r\n            <div className=\"\">\r\n                <div className=\"mb-4\">\r\n                    {\r\n                        isFetching ?\r\n                            <LinearProgress />\r\n                            :\r\n                            <div className=\"bg-light\" style={{ padding: \".12rem\" }}></div>\r\n                    }\r\n                </div>\r\n                {\r\n                    posts.map(post => {\r\n                        console.log(post._id)\r\n                        return <Post key={post._id} postId={post._id} />\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n// export default class Body extends Component {\r\n\r\n//     // props : userId\r\n\r\n//     constructor(props) {\r\n//         super(props)\r\n//     }\r\n\r\n//     state = {\r\n//         posts: [],\r\n//         user: {}\r\n//     }\r\n\r\n\r\n\r\n//     fetchUser = async () => {\r\n//         await Api.fetchUser(this.props.userId).then(res => {\r\n//             this.setState({ user: res.data })\r\n//         })\r\n//     }\r\n\r\n\r\n//     fetchPosts = async () => {\r\n\r\n//         await Api.fetchAllPosts(this.props.userId).then(res => {\r\n//             this.setState({ posts: res.data })\r\n//         })\r\n\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         this.fetchPosts()\r\n//         this.fetchUser()\r\n//     }\r\n\r\n//     // componentDidUpdate(prevProps, prevState) {}\r\n\r\n//     render() {\r\n//         return (\r\n//             <div className=\"body-container\">\r\n//                 <SahreBar user={this.state.user} />\r\n\r\n//                 <div className=\"\">\r\n//                     {\r\n//                         this.state.posts.map(post => {\r\n//                             return <Post key={post._id} post={post} userId={this.props.userId} />\r\n//                         })\r\n//                     }\r\n\r\n//                 </div>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}