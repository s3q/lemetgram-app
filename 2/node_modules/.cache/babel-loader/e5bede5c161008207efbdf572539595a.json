{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\s3q\\\\Documents\\\\GitHub\\\\medical-encyclopedia\\\\medical-encyclopedia-app\\\\src\\\\components\\\\ProfileBody.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useContext, useEffect } from 'react';\nimport SharBer from \"./SahreBar.jsx\";\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\nimport RemoveRoundedIcon from '@material-ui/icons/RemoveRounded';\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\nimport { CircularProgress, LinearProgress } from \"@material-ui/core\";\nimport Api from '../functions/Api.js';\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext.js';\nimport { updateLoginApiContext } from \"../ApiContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfileBody(props) {\n  _s();\n\n  // props: user\n  const context = useContext(AuthContext);\n  const [isFollowing, setIsFollowing] = useState(false);\n  const [user, setUser] = useState(props.user);\n  const [followers, setFollowers] = useState(0);\n  const [followings, setFollowings] = useState(0);\n  const [isFetching, setIsFetching] = useState(false);\n  useEffect(() => {\n    updateLoginApiContext(context.dispatch);\n  }, [user, isFollowing, followers, followings]);\n  useEffect(() => {\n    var _props$user, _props$user$followers, _props$user2, _props$user2$followin, _props$user3, _props$user3$follower;\n\n    setUser(props.user);\n    setIsFetching(false); // console.log(props.user, props.user.id, Boolean(props.user.id))\n\n    if (props.user._id) {\n      setIsFetching(false);\n    } else {\n      setIsFetching(true);\n    }\n\n    setFollowers((_props$user = props.user) === null || _props$user === void 0 ? void 0 : (_props$user$followers = _props$user.followers) === null || _props$user$followers === void 0 ? void 0 : _props$user$followers.length);\n    setFollowings((_props$user2 = props.user) === null || _props$user2 === void 0 ? void 0 : (_props$user2$followin = _props$user2.followings) === null || _props$user2$followin === void 0 ? void 0 : _props$user2$followin.length);\n    setIsFollowing((_props$user3 = props.user) === null || _props$user3 === void 0 ? void 0 : (_props$user3$follower = _props$user3.followers) === null || _props$user3$follower === void 0 ? void 0 : _props$user3$follower.includes(context.user._id));\n  }, [props.user]);\n\n  function followButton() {\n    if (user._id && context.user._id && user._id != context.user._id) {\n      if (isFollowing) {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => handleFollow(),\n          children: [\"Unfollow \", /*#__PURE__*/_jsxDEV(RemoveRoundedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 102\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 24\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => handleFollow(),\n          children: [\"Follow \", /*#__PURE__*/_jsxDEV(AddRoundedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 98\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 24\n        }, this);\n      }\n    } else {\n      return;\n    }\n  }\n\n  const unfollowUser = async () => {\n    const res = await Api.unfollowUser(user._id, context.user._id);\n    return res.status;\n  };\n\n  const followUser = async () => {\n    const res = await Api.followUser(user._id, context.user._id);\n    return res.status;\n  };\n\n  const handleFollow = async () => {\n    if (user._id != context.user._id) {\n      if (isFollowing) {\n        const resStatus = await unfollowUser();\n\n        if (resStatus == 200) {\n          user.followers = user.followers.filter(e => {\n            return e != context.user._id;\n          });\n          setUser(prevState => ({ ...prevState,\n            followers: user.followers\n          }));\n          setIsFollowing(false);\n        }\n      } else {\n        const resStatus = await followUser();\n\n        if (resStatus == 200) {\n          let newFollowers = user.followers.push(context.user._id);\n          setUser(prevState => ({ ...prevState,\n            followers: newFollowers\n          }));\n          setIsFollowing(true);\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card text-center mb-5 custom-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body \",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundImage: !user.coverImg ? `` : `url(${user.coverImg})`\n            },\n            className: `card-img-top coverImg-center ${user.coverImg ? `loadImg` : `isLoading`}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundImage: !user.profileImg ? `` : `url(${user.profileImg})`\n            },\n            className: `profileImg-center shadow-lg p-1 bg-body rounded-circle ${user.profileImg ? `loadImg` : `isLoading`}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username-profile-div shadow-lg bg-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"username-profile-span\",\n              children: /*#__PURE__*/_jsxDEV(AccountCircleRoundedIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 69\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"username-profile\",\n              children: user === null || user === void 0 ? void 0 : user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group mb-3 mt-3 position-relative\",\n          children: [isFetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" position-absolute top-0 start-0 bg-light w-100 h-100 d-flex justify-content-center flex-column\",\n            style: {\n              zIndex: 10\n            },\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n              className: \"m-auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [\"Name : \", user === null || user === void 0 ? void 0 : user.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [\"discrption : \", user === null || user === void 0 ? void 0 : user.desc]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [\"Followers : \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge bg-warning text-dark\",\n              children: followers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 69\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [\"Following : \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge bg-danger text-dark\",\n              children: followings\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 69\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [\"From : \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge text-dark\",\n              children: user === null || user === void 0 ? void 0 : user.from\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 64\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [\"City : \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge text-dark\",\n              children: user === null || user === void 0 ? void 0 : user.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 64\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [\"Email : \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge text-dark\",\n              children: user === null || user === void 0 ? void 0 : user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 65\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), followButton()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), context.user._id == user._id ? /*#__PURE__*/_jsxDEV(SharBer, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 45\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n} // export default class ProfileBody extends Component {\n//     // props : userId\n//     constructor(props) {\n//         super(props)\n//     }\n//     state = {\n//         isFollowing: false,\n//         user: this.props.user,\n//         followers: 0,\n//         followings: 0\n//     }\n//     componentDidUpdate(prevProps, prevState) {\n//         if (prevProps.user !== this.state.user) {\n//             this.setState({ user: this.props.user })\n//             this.setState({ followers: this.props.user?.followers?.length })\n//             this.setState({ followings: this.props.user?.followings?.length })\n//             this.setState({ isFollowing: this.props.user?.followers?.includes(this.props.userId) })\n//         }\n//         // if (prevProps.isLike !== this.state.isLike) {\n//         //     console.log(prevProps, prevState)\n//         // }\n//     }\n//     followButton() {\n//         if (this.state.user._id != this.props.userId) {\n//             if (this.state.isFollowing) {\n//                 return <button className=\"btn btn-secondary\" onClick={() => this.handleFollow()}>Unfollow <RemoveRoundedIcon /></button>\n//             } else {\n//                 return <button className=\"btn btn-primary\" onClick={() => this.handleFollow()}>Follow <AddRoundedIcon /></button>\n//             }\n//         }\n//     }\n//     unfollowUser = async () => {\n//         const res = await Api.unfollowUser(this.state.user._id, this.props.userId)\n//         return res.status\n//     }\n//     followUser = async () => {\n//         const res = await Api.followUser(this.state.user._id, this.props.userId)\n//         return res.status\n//     }\n//     handleFollow = async () => {\n//         if (this.state.user._id != this.userId) {\n//             if (this.state.isFollowing) {\n//                 const resStatus = await this.unfollowUser()\n//                 if (resStatus == 200) {\n//                     this.state.user.followers = this.state.user.followers.filter(e => {\n//                         return e != this.props.userId\n//                     })\n//                     this.setState(prevState => ({\n//                         user: {\n//                             ...prevState.user,\n//                             followers: this.state.user.followers\n//                         }\n//                     }))\n//                     this.setState({ isFollowing: false })\n//                 }\n//             } else {\n//                 const resStatus = await this.followUser()\n//                 if (resStatus == 200) {\n//                     let newFollowers = this.state.user.followers.push(this.props.userId)\n//                     this.setState(prevState => ({\n//                         user: {\n//                             ...prevState.user,\n//                             followers: newFollowers\n//                         }\n//                     }))\n//                     this.setState({ isFollowing: true })\n//                 }\n//             }\n//         }\n//     }\n//     render() {\n//         return (\n//             <React.Fragment>\n//                 <div className=\"card text-center mb-4\">\n//                     <div className=\"card-body \">\n//                         <h5 className=\"card-title mb-3\">\n//                         </h5>\n//                         <div className=\"position-relative\">\n//                             <img src={this.state.user?.coverImg} className=\"card-img-top coverImg-center\" alt=\"\" />\n//                             <img src={this.state.user?.profileImg} className=\"profileImg-center shadow-lg p-3 mb-5 bg-body rounded-circle\" alt=\"\" />\n//                             <div className=\"username-profile-div shadow-lg bg-body\">\n//                                 <span className=\"username-profile-span\"><AccountCircleRoundedIcon /></span>\n//                                 <span className=\"username-profile\">{this.state.user?.username}</span>\n//                             </div>\n//                         </div>\n//                         <ul className=\"list-group mb-3 mt-3\">\n//                             <li className=\"list-group-item\">Name : {this.state.user?.name}</li>\n//                             <li className=\"list-group-item\">discrption : {this.state.user?.desc}</li>\n//                             <li className=\"list-group-item\">Followers : <span className=\"badge bg-warning text-dark\">{this.state.followers}</span></li>\n//                             <li className=\"list-group-item\">Following : <span className=\"badge bg-danger text-dark\">{this.state.followings}</span></li>\n//                             <li className=\"list-group-item\">From : <span className=\"badge text-dark\">{this.state.user?.from}</span></li>\n//                             <li className=\"list-group-item\">City : <span className=\"badge text-dark\">{this.state.user?.city}</span></li>\n//                             <li className=\"list-group-item\">Email : <span className=\"badge text-dark\">{this.state.user?.email}</span></li>\n//                         </ul>\n//                         {this.followButton()}\n//                     </div>\n//                 </div>\n//                 <SharBer user={this.state.user} />\n//                 <Link to=\"/profile/test3\">test3</Link>\n//             </React.Fragment>\n//         )\n//     }\n// }\n\n_s(ProfileBody, \"ZLHR+fEGpDvKxfKq0R2K0wpUxIQ=\");\n\n_c = ProfileBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileBody\");","map":{"version":3,"sources":["C:/Users/s3q/Documents/GitHub/medical-encyclopedia/medical-encyclopedia-app/src/components/ProfileBody.jsx"],"names":["React","Component","useState","useContext","useEffect","SharBer","AccountCircleRoundedIcon","RemoveRoundedIcon","AddRoundedIcon","CircularProgress","LinearProgress","Api","Link","AuthContext","updateLoginApiContext","ProfileBody","props","context","isFollowing","setIsFollowing","user","setUser","followers","setFollowers","followings","setFollowings","isFetching","setIsFetching","dispatch","_id","length","includes","followButton","handleFollow","unfollowUser","res","status","followUser","resStatus","filter","e","prevState","newFollowers","push","backgroundImage","coverImg","profileImg","username","zIndex","name","desc","from","city","email"],"mappings":"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","sourcesContent":["import React, { Component, useState, useContext, useEffect } from 'react'\r\nimport SharBer from \"./SahreBar.jsx\"\r\n\r\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\r\nimport RemoveRoundedIcon from '@material-ui/icons/RemoveRounded';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport { CircularProgress, LinearProgress } from \"@material-ui/core\"\r\n\r\nimport Api from '../functions/Api.js';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { AuthContext } from '../context/AuthContext.js';\r\nimport { updateLoginApiContext } from \"../ApiContext\"\r\n\r\nexport default function ProfileBody(props) {\r\n    // props: user\r\n    const context = useContext(AuthContext)\r\n\r\n    const [isFollowing, setIsFollowing] = useState(false)\r\n    const [user, setUser] = useState(props.user)\r\n    const [followers, setFollowers] = useState(0)\r\n    const [followings, setFollowings] = useState(0)\r\n\r\n    const [isFetching, setIsFetching] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        updateLoginApiContext(context.dispatch)\r\n    }, [user, isFollowing, followers, followings])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setUser(props.user)\r\n        setIsFetching(false)\r\n        // console.log(props.user, props.user.id, Boolean(props.user.id))\r\n        if (props.user._id) {\r\n            setIsFetching(false)\r\n        } else {\r\n            setIsFetching(true)\r\n        }\r\n\r\n        setFollowers(props.user?.followers?.length)\r\n        setFollowings(props.user?.followings?.length)\r\n\r\n        setIsFollowing(props.user?.followers?.includes(context.user._id))\r\n\r\n    }, [props.user])\r\n\r\n\r\n    function followButton() {\r\n        if (user._id && context.user._id && user._id != context.user._id) {\r\n            if (isFollowing) {\r\n                return <button className=\"btn btn-secondary\" onClick={() => handleFollow()}>Unfollow <RemoveRoundedIcon /></button>\r\n            } else {\r\n                return <button className=\"btn btn-primary\" onClick={() => handleFollow()}>Follow <AddRoundedIcon /></button>\r\n            }\r\n        } else {\r\n            return\r\n        }\r\n    }\r\n\r\n    const unfollowUser = async () => {\r\n        const res = await Api.unfollowUser(user._id, context.user._id)\r\n        return res.status\r\n    }\r\n\r\n\r\n    const followUser = async () => {\r\n        const res = await Api.followUser(user._id, context.user._id)\r\n        return res.status\r\n    }\r\n\r\n\r\n\r\n    const handleFollow = async () => {\r\n        if (user._id != context.user._id) {\r\n            if (isFollowing) {\r\n                const resStatus = await unfollowUser()\r\n                if (resStatus == 200) {\r\n\r\n                    user.followers = user.followers.filter(e => {\r\n                        return e != context.user._id\r\n                    })\r\n\r\n                    setUser(prevState => ({\r\n                        ...prevState,\r\n                        followers: user.followers\r\n                    }))\r\n\r\n                    setIsFollowing(false)\r\n                }\r\n            } else {\r\n                const resStatus = await followUser()\r\n                if (resStatus == 200) {\r\n\r\n                    let newFollowers = user.followers.push(context.user._id)\r\n\r\n\r\n                    setUser(prevState => ({\r\n                        ...prevState,\r\n                        followers: newFollowers\r\n                    }))\r\n\r\n                    setIsFollowing(true)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"card text-center mb-5 custom-card\">\r\n                <div className=\"card-body \">\r\n                    <h5 className=\"card-title mb-3\">\r\n                    </h5>\r\n                    <div className=\"position-relative\">\r\n                        <div style={{ backgroundImage: (!user.coverImg ? `` : `url(${user.coverImg})`) }} className={`card-img-top coverImg-center ${user.coverImg ? `loadImg` : `isLoading`}`}>\r\n                            {/* {isFetching ? <CircularProgress /> : null} */}\r\n                        </div>\r\n                        <div style={{ backgroundImage: (!user.profileImg ? `` : `url(${user.profileImg})`) }} className={`profileImg-center shadow-lg p-1 bg-body rounded-circle ${user.profileImg ? `loadImg` : `isLoading`}`}>\r\n                            {/* {isFetching ? <CircularProgress /> : null} */}\r\n                        </div>\r\n                        <div className=\"username-profile-div shadow-lg bg-body\">\r\n                            <span className=\"username-profile-span\"><AccountCircleRoundedIcon /></span>\r\n                            <span className=\"username-profile\">{user?.username}</span>\r\n                        </div>\r\n                    </div>\r\n                    <ul className=\"list-group mb-3 mt-3 position-relative\">\r\n                        {\r\n                            isFetching ?\r\n                                <div className=\" position-absolute top-0 start-0 bg-light w-100 h-100 d-flex justify-content-center flex-column\" style={{ zIndex: 10 }}>\r\n                                    <CircularProgress className=\"m-auto\" />\r\n                                </div> :\r\n                                null\r\n                        }\r\n                        <li className=\"list-group-item\">Name : {user?.name}</li>\r\n                        <li className=\"list-group-item\">discrption : {user?.desc}</li>\r\n                        <li className=\"list-group-item\">Followers : <span className=\"badge bg-warning text-dark\">{followers}</span></li>\r\n                        <li className=\"list-group-item\">Following : <span className=\"badge bg-danger text-dark\">{followings}</span></li>\r\n                        <li className=\"list-group-item\">From : <span className=\"badge text-dark\">{user?.from}</span></li>\r\n                        <li className=\"list-group-item\">City : <span className=\"badge text-dark\">{user?.city}</span></li>\r\n                        <li className=\"list-group-item\">Email : <span className=\"badge text-dark\">{user?.email}</span></li>\r\n                    </ul>\r\n                    {followButton()}\r\n                </div>\r\n            </div>\r\n            {context.user._id == user._id ? <SharBer user={user} /> : \"\"}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\n// export default class ProfileBody extends Component {\r\n\r\n//     // props : userId\r\n//     constructor(props) {\r\n//         super(props)\r\n//     }\r\n\r\n//     state = {\r\n//         isFollowing: false,\r\n//         user: this.props.user,\r\n//         followers: 0,\r\n//         followings: 0\r\n//     }\r\n\r\n//     componentDidUpdate(prevProps, prevState) {\r\n//         if (prevProps.user !== this.state.user) {\r\n//             this.setState({ user: this.props.user })\r\n\r\n//             this.setState({ followers: this.props.user?.followers?.length })\r\n//             this.setState({ followings: this.props.user?.followings?.length })\r\n\r\n//             this.setState({ isFollowing: this.props.user?.followers?.includes(this.props.userId) })\r\n\r\n//         }\r\n//         // if (prevProps.isLike !== this.state.isLike) {\r\n//         //     console.log(prevProps, prevState)\r\n//         // }\r\n//     }\r\n\r\n\r\n\r\n//     followButton() {\r\n//         if (this.state.user._id != this.props.userId) {\r\n//             if (this.state.isFollowing) {\r\n//                 return <button className=\"btn btn-secondary\" onClick={() => this.handleFollow()}>Unfollow <RemoveRoundedIcon /></button>\r\n//             } else {\r\n//                 return <button className=\"btn btn-primary\" onClick={() => this.handleFollow()}>Follow <AddRoundedIcon /></button>\r\n//             }\r\n//         }\r\n//     }\r\n\r\n//     unfollowUser = async () => {\r\n//         const res = await Api.unfollowUser(this.state.user._id, this.props.userId)\r\n//         return res.status\r\n//     }\r\n\r\n\r\n//     followUser = async () => {\r\n//         const res = await Api.followUser(this.state.user._id, this.props.userId)\r\n//         return res.status\r\n//     }\r\n\r\n\r\n\r\n//     handleFollow = async () => {\r\n//         if (this.state.user._id != this.userId) {\r\n//             if (this.state.isFollowing) {\r\n//                 const resStatus = await this.unfollowUser()\r\n//                 if (resStatus == 200) {\r\n\r\n//                     this.state.user.followers = this.state.user.followers.filter(e => {\r\n//                         return e != this.props.userId\r\n//                     })\r\n\r\n//                     this.setState(prevState => ({\r\n//                         user: {\r\n//                             ...prevState.user,\r\n//                             followers: this.state.user.followers\r\n//                         }\r\n//                     }))\r\n\r\n//                     this.setState({ isFollowing: false })\r\n//                 }\r\n//             } else {\r\n//                 const resStatus = await this.followUser()\r\n//                 if (resStatus == 200) {\r\n\r\n//                     let newFollowers = this.state.user.followers.push(this.props.userId)\r\n\r\n//                     this.setState(prevState => ({\r\n//                         user: {\r\n//                             ...prevState.user,\r\n//                             followers: newFollowers\r\n//                         }\r\n//                     }))\r\n\r\n//                     this.setState({ isFollowing: true })\r\n//                 }\r\n//             }\r\n//         }\r\n//     }\r\n\r\n\r\n\r\n//     render() {\r\n\r\n\r\n//         return (\r\n//             <React.Fragment>\r\n//                 <div className=\"card text-center mb-4\">\r\n//                     <div className=\"card-body \">\r\n//                         <h5 className=\"card-title mb-3\">\r\n//                         </h5>\r\n//                         <div className=\"position-relative\">\r\n//                             <img src={this.state.user?.coverImg} className=\"card-img-top coverImg-center\" alt=\"\" />\r\n//                             <img src={this.state.user?.profileImg} className=\"profileImg-center shadow-lg p-3 mb-5 bg-body rounded-circle\" alt=\"\" />\r\n//                             <div className=\"username-profile-div shadow-lg bg-body\">\r\n//                                 <span className=\"username-profile-span\"><AccountCircleRoundedIcon /></span>\r\n//                                 <span className=\"username-profile\">{this.state.user?.username}</span>\r\n//                             </div>\r\n//                         </div>\r\n//                         <ul className=\"list-group mb-3 mt-3\">\r\n//                             <li className=\"list-group-item\">Name : {this.state.user?.name}</li>\r\n//                             <li className=\"list-group-item\">discrption : {this.state.user?.desc}</li>\r\n//                             <li className=\"list-group-item\">Followers : <span className=\"badge bg-warning text-dark\">{this.state.followers}</span></li>\r\n//                             <li className=\"list-group-item\">Following : <span className=\"badge bg-danger text-dark\">{this.state.followings}</span></li>\r\n//                             <li className=\"list-group-item\">From : <span className=\"badge text-dark\">{this.state.user?.from}</span></li>\r\n//                             <li className=\"list-group-item\">City : <span className=\"badge text-dark\">{this.state.user?.city}</span></li>\r\n//                             <li className=\"list-group-item\">Email : <span className=\"badge text-dark\">{this.state.user?.email}</span></li>\r\n//                         </ul>\r\n//                         {this.followButton()}\r\n//                     </div>\r\n//                 </div>\r\n//                 <SharBer user={this.state.user} />\r\n//                 <Link to=\"/profile/test3\">test3</Link>\r\n//             </React.Fragment>\r\n//         )\r\n//     }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}